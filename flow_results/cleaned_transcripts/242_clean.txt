Michael Kennedy: Online education has certainly gone mainstream. Developers and companies have finally gotten comfortable taking online courses. Sometimes these are recorded self-paced courses like the ones we have at Talk Python Training. Other times, they're more like live events in webcast format. In this episode you'll meet two guys who are taking the interactivity of online learning up a notch. Brian Clark and Cecil Phillip run a weekly event on Twitch where they're live streaming an interactive Python course. They take questions from hundreds of students and dig into the diversions that mainstream online learning simply cannot. This is Talk Python to Me, Episode 242 recorded on location at Microsoft Ignite in Orlando, Florida, November 7, 2019. Welcome to talk Python to me, a weekly podcast on Python, the language, the libraries, the ecosystem, and the personalities. This is your host, Michael Kennedy. Follow me on Twitter where I'm @mkennedy. Keep up with the show and listen to past episodes at talkpython.fm and follow the show on Twitter via @TalkPython. Brian and Cecil, welcome to Talk Python to me.
Panelists: Hey, how's it going, thanks for having us.
Michael Kennedy: Yeah, it's great to have you here. I'm super excited to talk about this Twitch stuff. To me Twitch and Mixer and all these cool livestream gaming things, they're amazing and it's just such a different world than I'm used to, but it hasn't been on my radar as a programming thing until Cecil, you said, "Hey, you know what we're doing together?" And I'm like, "No way, that is actually cool." So we're going to talk about your livestream, you're live streaming Python education and developer education in general. But before we get there, let's just talk a little bit about you, and give people a background on you. You haven't been on the show yet, Brian, and so how'd you into Python real quickly?
Panelists: Well, programming Python in particular, I'm normally programming in Javascript, prior to that it was C# and .NET, and I just like challenging myself to learn new languages. Also Cecil and I are on the Cloud Advocacy Team, and in particular our audience is around academic.
Michael Kennedy: And you got to learn a bunch of languages for that. They're like, "We work with Scala." you're like, "What is Scala, I got to go figure this out apparently." Yeah, okay.
Panelists: Exactly, and part of what we were wanting to do at least what I started out with, and I've since learned that Cecil had a little bit of background in Python prior to starting the show, but we've really wanted to take a beginner-centric approach to it. Like straight up, what's a variable, what's constant, that kind of stuff.
Michael Kennedy: I think that's so interesting because yeah, we'll get more into this, but you really do have that beginner focus so you don't have to be on your fifth year of doing this language to make it worthwhile.
Panelists: Exactly. That sparked the idea to alright, I've been interested in Python, there's a lot of machine learning and AI that's around it that I want to get into more, let me learn Python and start with that and so that's how that came to be.
Michael Kennedy: Yeah, super cool. And Cecil, maybe just tell people quickly about yourself. You've been on the show before doing all sorts of cool stuff, you are on the Dev Evangelist Advocacy story, the panel, that was really fun.
Panelists: Yeah, yeah, yeah, we were on before and we talked a little bit about developer evangelism and advocacy and what this is. I kind of like what Brian said, right, I'm on the CA or the Cloud Advocate Team, and essentially the team that me and Brian are on we talk a lot with students, with faculty members, I really just try to understand what are some of their needs from an educational perspective when it comes to Microsoft products, when it comes to cloud technology or Visual Studio Code or machine learning and IoT, some of these really interesting topics, what does that mean for a student and what does that mean for you trying to establish your career path going forward?
Michael Kennedy: Yeah, and traditionally that's meant okay, we're using Windows, maybe Windows Server, we're using C# or possibly C++ if you want to spread out. It didn't used to mean Linux and Python, did it? It's a different world where you're living now.
Panelists: It's a totally different world. But I think too what I'm realizing is the more schools that you talk to, all of them have a different origin story, all of them have very different backgrounds. The college that I went to, I went to Florida Tech, Melbourne, Florida which is not too far from where we are today, and everybody had a Windows machine, that was normal. And this was a while ago, right, this was when people still had Compaq Presarios for their laptops.
Michael Kennedy: Did you connect to the internet silently or with noise?
Panelists: When I went home we definitely had a 56K modem that did the ringing thing.
Michael Kennedy: I remember being able to distinguish the noise you would hear, you're like, "Oh, I got 38 whatever or I got 56K." You could tell the connection noise, you're like, "Oh, that's a good one, we're going to do some downloading today."
Panelists: That's funny, that's funny. But yeah, just depending on the types of schools that you go to, where they are and what their focus is you'll see a lot of different types of technologies and things of that nature. Some of them are very Linux friendly you know what I mean, some of 'em are very Windows friendly. Surprisingly over the schools that I've personally visited I haven't seen a lot of Macintosh machines which is interesting.
Michael Kennedy: It is interesting. Macintosh are obscenely expensive.
Panelists: That is true, and that's what I figured it was.
Michael Kennedy: And as a student, I think of my daughter's who are both in college now. They're paying their own rent, we cover their tuition, but they got to pay their rent and things like do I need a new phone this year even though it's broken is like, I don't know if I can afford that 600 bucks. And like this MacBook, I love it, but it was over three grand, it's ridiculous.
Panelists: Yeah, yeah, but in the developer world, this is an environment that we're used to.
Michael Kennedy: 'Cause we have well paying jobs generally speaking so it's not that big of a deal right?
Panelists: Sure, sure, I mean whether it's the case that we have the financial means to do it ourselves or we have company sponsored machines or something like that.
Michael Kennedy: Yeah, companies will just say, "Here's your machine," yeah for sure.
Panelists: But it just shows you there's a different perspective now that when you go to schools, the resources that we have is not the same.
Michael Kennedy: So you see more Windows machines there maybe, huh?
Panelists: Definitely more Windows machines.
Michael Kennedy: How 'about Linux?
Panelists: Some Chromebooks randomly, every now and again. A few folks using Ubuntu, and maybe Gentoo or something like that from a Linux perspective.
Michael Kennedy: Cool, well before we get into the topics. I don't know if the final show will have the background noise, it may. Certainly there is a lot of background noise for us right here 'cause we're recording on location at Microsoft Ignite, yeah? And it's such a crazy conference. I thought of Microsoft Build as one of the really large conferences, PyCon, we get 3,500 people attend there. This is like 10x PyCon, right? I had no idea how big it was.
Panelists: Somewhere around 30,000 attendees, something like that.
Michael Kennedy: It's something, man. So there's a lot of stuff going on and it's a little interesting to be here as a Python person because there is some interesting Python stuff. I just watched Steve Dower's presentation about Python security and that was really cool. But there's also a lot of stuff that is foreign to me, there's some interesting companies. But maybe tell us a little bit about some of the announcements, like we have Azure On-Premise, pretty interesting and then we have VS Code Online, so there's a few relevant things to point out from what's happening this week.
Panelists: That's the one, the VS Code Online one is the one I'm most excited about and was like really pumped to try out and just start tinkering with, in fact to the point where I used it as a backup for my talk where I was demonstrating an extension in Visual Studio Code. It's in preview, the extension, and sometimes I'm still learning Python and setting up my environment properly and I think I have something misconfigured on my laptop and so I had it as a backup because that environment, I could spin it up, it's using Linux behind the scenes, and I was able to get the extension working with all the Python dependencies that I needed and it went smoothly, thankfully.
Michael Kennedy: Yeah, I think this is going to be really empowering for developers, right? It's like, you go here, you click the button, Cecil was telling us yesterday you can have a thing on your GitHub repository, launch this in VS Code Online basically.
Panelists: The other aspect of it that's going to be super interesting to see people using it for, speaking of academic, and just teaching and learning and that kind of stuff is in workshops or in classrooms, being able to set up a predetermined environment that automatically loads up the code that you might need or the demo application right from GitHub so that your students or just attendees there have their environment already set to go. You're not wasting time in the beginning making sure everybody's on the same page. You're also dealing with a lot of people that'll get work issued devices like you both were just talking about, and they have limited rights to install stuff.
Michael Kennedy: Right, I don't have permissions or I have a Chromebook and it won't run it or whatever, right?
Panelists: Exactly, so doing it all from the browser like that makes it super interesting to open up the doors that way.
Michael Kennedy: Cecil, do you see this as something that you could tie in to your livestream?
Panelists: Definitely, I think maybe at some point in time. I mean Brian and I haven't spoken about it yet, but maybe we could find a way to integrate it into the stream, maybe do a quick demo of it really just to show folks what's possible. 'Cause kind of like what you were saying before I think the benefit there is just to be able to get going quickly. There's pretty much little to no setup. I don't have to worry about installing operating system updates and having to write dependencies and those types of things happen. I'm assuming there might be a way to setup a blueprint or a template that now we have multiple people that are trying to create the same environment from the same repo, and so now we all just have the same environment setup essentially. Our own instance of the same environment.
Michael Kennedy: Yeah, it seems like a great way to help people who are just getting going, they're coming into the stream to learn what the heck Python is and how it works. So it's perfect, like click this button and we'll get you rolling.
Panelists: Yeah, definitely. I think two days ago, two days from the day of us recording anyway, so again, Brian and I had this stream and usually what we do is we take some of the code that we write on stream and we'll push it into a GitHub repo, and so after I saw the announcement I was like, "Let me go and see if I can get our code from the repo running in VS Online." And it was super simple. There was literally two or three buttons I had to press, like create environment, I had to put in what repo I wanted it to come from and that was it. And now I have a machine set up, there's Visual Studio Code running inside the browser, they already had Python on it installed so I didn't have to install it, which was super cool.
Michael Kennedy: Yeah, 3.8, shiny new Python.
Panelists: Yeah, it's Python 3.8, which as of today I think is maybe three weeks old, not even a month old yet. So that was really cool to see, how easy that was to set up.
Michael Kennedy: Awesome, yeah, I think that's a cool announcement coming out here, and I'm sure a lot of people can make use of it, especially in education where set up is challenging. Like Jupyter notebooks are nice and I do like them, but I would prefer to learn with something that has auto-complete that's a little bit better. And I just like the tooling of more of a dev editor, more than I do like Jupyter, even though Jupyter Labs is pretty killer. Alright, so let's talk about Twitch. And Brian I guess that started with you. You've been doing Twitch for a while.
Panelists: I'm so happy to be able to talk about it 'cause I'm super passionate about live streaming in general.
Michael Kennedy: That's awesome, so tell everyone what Twitch is out there, I know a lot of folks know, but a lot of people are like, "Twitch is a thing that a person does, not necessarily a platform."
Panelists: It's traditionally though of as everybody goes there to watch other people play video games.
Michael Kennedy: Right, and these are famous YouTube influencer types, but of the gamer world. They'll go there and they'll play Warcraft or Fortnite for 12 hours straight and people are such fans, they'll just watch that.
Panelists: Yeah, people in our industry might think, "Well, you're just going there to goof off," but the surprise is there's a lot of other types of content that's available on the platform that people are streaming now, not just programming, but there's people that are building stuff hardware wise, there's people that are doing arts and crafts creative related type of things, drawing, painting, I mean there's all kinds of stuff on the platform that you can watch, and be entertained by and learn.
Michael Kennedy: That's super cool, I think it's similar to YouTube in that sense. YouTube sounds to a lot of people, "Oh, they were on YouTube all day, they did nothing." It could've been you were watching an awesome build this app like the one you need to build in Django on YouTube. That could be super productive YouTube.
Panelists: Yeah, and I think the key difference though there with this and what draws me to live streaming is the ability as a viewer to engage with the person that might be teaching something or doing something like that.
Michael Kennedy: I put a bunch of stuff on YouTube and then I might get comments about it, some of them are super negative, some of them are unrelated, some are positive. But that's the YouTube world, but it's not real-time. I created and then I publish it and then I go to bed and then I get a notification. It seems to me, watching you two on your channel that it's very interactive.
Panelists: Absolutely, so with YouTube and that stuff it's all scripted out and most of the time, not to say that there aren't people that don't do this, but you're going to see the happy path. How do you get from A to B, building this whole app out?
Michael Kennedy: Right, the mistake I made, I edited that out 'cause it would look stupid.
Panelists: Exactly, you don't want to look like you don't know what you're talking about. And that's what is intimidating as a streamer though and to get into it is you're doing it live in front of potentially several people and you're going to be making mistakes, but that's the benefit of going there and being there in the moment. You get to see what it is real life. You're not getting the pretty picture all the time right out front.
Michael Kennedy: That's super positive. I do think this is a really valuable skill that people can develop because when you're doing recorded stuff, yeah you learn a lot and that's great, but when you're doing the live presentation you have to think about what you're saying, you got to engage with the people, you got to type and talk, it's much like in-person training, but just separated physically, right? I think it really gives you a skill of presenting in general around code that people are like, how did you just go up there, and you typed and you talked and you were looking at that other person? Well, it's 'cause I've done hundreds of hours, like I did in in-person world, you guys do it online, right?
Panelists: Yeah, it's definitely something where when I first started out, I still have the recordings of my very first streams.
Michael Kennedy: Are they hard to watch?
Panelists: Well, even the most recent one is hard to watch, I can't stand hearing myself. I'm not going to be able to listen to this podcast either. It's just the way it is. It's very rough, you could tell I'm not used to being able to multi-task like that, and now I feel like it just comes as second nature.
Michael Kennedy: You seem super smooth, both of you guys do. Cecil, what do you think about this idea of using live streaming as a way to almost become better at presenting in general?
Panelists: I think it's definitely a great opportunity for particularly folks that are new because I think it makes it a lot less intimidating. 'Cause essentially I'm looking at my room or my camera or my computer or my office set up and I'm not looking at a room with 10 people or 20 people or 100 people, whatever the case is.
Michael Kennedy: You're not getting those blank stares back that kill you, yeah?
Panelists: Right, so I think from that perspective it gives you a great opportunity to practice, it gives you a great opportunity to even just deliver content to a group of folks and just in a very natural way. 'Cause I could just imagine you being a lot more nervous when there's a stage and there's a camera and there's lights and there's sound and like we're in a room right now and there's a lot of background noise going on. There's a lot of emotion that goes into that. And when you think about how your emotions affect your body and affect the tone of your voice and the shakiness of your hands.
Michael Kennedy: They can just get you distracted, right? They can break your thought patterns, and I knew I was going to do this thing in the presentation, now I'm so freaked out that person's looking at me.
Panelists: Yeah, yeah, exactly. So I think it's a great opportunity for folks to do that. Even just me and Brian are learning and getting better at becoming Python folks on engaging in the community and understanding what's possible and what we could do.
Michael Kennedy: This portion of Talk Python to Me is brought to you by Linode. Whether you're working on a personal project or managing your enterprise's infrastructure, Linode has the pricing, support, and scale that you need to take your project to the next level. With 11 data centers worldwide, including their newest data center in Sydney, Australia, enterprise-grade hardware, S3 compatible storage, and the next generation network, Linode delivers the performance that you expect at a price that you don't. Get started on Linode today with a $20 credit and you get access to native SSD storage, a 40 gigabit network, industry leading processors, their revamped cloud manager at cloud.linode.com, root access to your server, along with their newest API and a Python cli. Just visit talkpython.fm/linode when creating a new Linode account and you'll automatically get $20 credit for your next project. Oh, and one last thing, they're hiring. Go to linode.com/careers to find out more. Let 'em know that we sent you. Brian, maybe tell me what was the first stuff that you started streaming on the channel. You don't do just Python, right? I thought I saw some Javascript stuff on one of your streams as well, is that right?
Panelists: Yeah, I'm up to three shows now actually. So I originally was just doing Javascript related stuff where I was building out a bot that interacts it makes it more engaging for the viewers it's built in to the chatroom there, which lets 'em do commands and all that kind of fun stuff. That's an ever-growing and iterating on that front there.
Michael Kennedy: Is that like the bang, Mark, and that type of stuff?
Panelists: Yes, absolutely.
Michael Kennedy: You built that and plugged that bot in? Oh, I just thought that was a Twitch thing, that's cool.
Panelists: No, no, no, yeah.
Michael Kennedy: Tell people how that works. Just real quick.
Panelists: Yeah, really quick. It basically just listening through the Twitch API, through the chat room. If you send certain keywords in there, prefixed with an exclamation point, it recognizes that's a command, it can do other things. So the first thing we ever built out was a light bulb in my office, people can change the color of that through a command in a chatroom, so it's kind of interesting for a viewer to come in and be like, "Oh, wow!"
Michael Kennedy: Was that just like a novelty or did they use it as productive, if they change it to red, that means slow down, if they change it to green it means speed up or anything like that?
Panelists: I think a little bit of both, honestly. So some people it's like, "Wow, that's cool, I'm changing somebody's light bulb color "across the globe from wherever I'm at in the world." but also it's been helpful at times, if I get so focused in on that flow state where I'm working on something, people can grab my attention and be like, "Hey, you actually missed this." by changing the color of the light or if somebody does something nice like follows or subscribes to the channel, it alerts me that way, that kind of thing.
Michael Kennedy: That's pretty awesome.
Panelists: I didn't start out doing that exactly. When I first started streaming, I didn't know what to stream yet, I just knew that Javascript was my main language of choice to use and so I just started going to, have you heard of CodeWars.com?
Michael Kennedy: No, I've heard of CodeCombat, but not Codewars.
Panelists: Very similar concept, it's just little coding challenges and stuff like that, and so on the weekend nights I was like, "Let me try for an hour, and get my feet wet doing this." and then it led into what we have today where we have three shows. We had the Learning Python from Scratch with Cecil, just started up a Build Up Devs show, which is more about the social side, the human side of being developers in the industry.
Michael Kennedy: Yeah, that's cool, that sounds really interesting.
Panelists: And then my Friday streams are just me being crazy wacky, working on the chat bot and just being a goofball.
Michael Kennedy: Cool. Cecil, maybe talk a little bit about what you guys cover on there. So you're going through Nina Zakharenko's course, which is a free Python course, friend of the show, hi, Nina. And that's a two-day course that you guys have been going on for a while, right?
Panelists: Our teammate, Nina Zakharenko, so she's also a cloud advocate at Microsoft with us and she has a free course, it's at learnpython.dev, totally free, it's actually a GitHub repo and you know you can generate GitHub pages from a repo, right? So essentially it's a GitHub repo that she generated and turned into an online workshop and now with this workshop there's two days and essentially it goes from very beginner Python concepts and right now we just finished our first day, maybe two weeks ago or something like that, but it's taken us four months to do, which I think is kind of interesting.
Michael Kennedy: It's super interesting, right because it's self-paced learning so it's like a whole day of maybe in person, would you say it's like a one-day in person, so if you were say to do that self-paced, maybe you'd do a couple hours a day a week, maybe a week to do a day, if you're doing part time. But you took four months. I know you don't do every day, but still that's interesting. And I think it touches a little bit on giving the people the sense of the true interactive nature of what you guys have going on, right?
Panelists: Yeah, totally. When we first started this, I was like, "Okay, we'll knock this out in two months, and that'll be it, and we'll do another thing, right?" But it turns out every section that we do because we pay so much attention to what's happening in the Twitch chatroom and as members that are watching pop in and pop out, we get a lot of questions, we get a lot of suggestions, we get a lot of ideas about, "Hey, why don't you try this out, and let's see what happens," or "Hey, I didn't, could you reexplain this particular topic?" or "Did you know that there was this other language feature that wasn't necessarily covered in that section, but let's try it out and see."
Michael Kennedy: Here's list comprehensions, but you can also do it with dictionaries, and they didn't talk abut that, but here we can do it here as well, right? It's kind of the same idea.
Panelists: Right, so just from now, that's how streaming once a week for three hours on a Wednesday turns into four months of video, which should've been a one day section. But just because we've just been so thorough, and just been answering tons of questions and all the interactions that Brian has built into his stream from turning his light bulbs on and then there's little sounds that folks can play.
Michael Kennedy: Brian, you've got funny Wednesday sounds and stuff. It's very appropriate to Twitch, it feels like it's very much part of that community those styles that you got there.
Panelists: And that's one of the things that I think differentiates it from a webinar or live streaming on YouTube or just putting out a YouTube video 'cause YouTube has live chat sure, and you could do live streaming there, but I think having the ability to customize that experience for the folks that are watching makes a huge difference, and it makes them feel like they're a part of that video that we just produced.
Michael Kennedy: I did really get that sense that people feel part of it. That you guys welcome them when they come, there's this deep exploration that they're part of and does, just to talk to the audience for a moment, it's really quite early days in terms of where you're starting. You explain what virtual environments are, you said you started to explain what a variable was. There's a lot of folks where there's not that level of training available. None of my courses assume you don't know what a string is necessarily. It doesn't assume much, but there's this thinking like a programmer thing you got to do and I feel like you guys are doing a good job helping.
Panelists: I think one of the good things with what me and Brian end having to do is because he has experience in Javascript, I have most of my professional experience in .NET and C#, we're able to give the perspective of "Hey, we know a little bit about programming from other languages and frameworks and things of that nature, how can we apply that to Python and use that knowledge to make us good teachers?" So even though we're not Python experts and even though we don't get paid to do Python, we don't have Python things in production, we don't have open source packages that folks are using, we do understand some of the basic constructs of programming and so we can use that background knowledge that we have to apply this to learning this new environment.
Michael Kennedy: Brian, what was your experience in Python when you came into doing this channel here, like how much?
Panelists: The extent was I could just recognize it when I would see it. I've reviewed Python code kind of thing, but that was the extent of my experience.
Michael Kennedy: Okay, I feel like this actually can be an advantage. I'm at a similar level as the people learning what I'm doing, so if they follow along with me I'm not like, "Why can't you create a virtual environment and install this, like obviously that's an easy step, let's get past that to the real." right? You're going through these steps with them. I think that's powerful, right? What do you think, do people react positively to that?
Panelists: Yeah, and so far we've gotten a lot of positive feedback because people will even go back to the past recordings 'cause we post stream notes and video recordings on YouTube and you can catch 'em on Twitch, but Twitch will only do it for a certain length of time they'll stay on there. And people will come in and they'll be like, "Hey, I've been catching up where I'm almost up to your current episode, but thank you so much, this has been super helpful because I'm a beginner as well." And it's been a fun challenge for me both from the aspect of I didn't know Python prior to this, but also to challenge myself to get back to the roots because I think we get so engulfed in we've already learned that lower level stuff that maybe you got in college or whatever education background you might have.
Michael Kennedy: I just want to talk about the new features of Angular 2 or whatever.
Panelists: Exactly, right. We get all hyped up about the new stuff and what we've already learned and take for granted that kind of thing. So it's been a fun challenge to get back to that and be like, "How do I explain what a variable is to somebody?" or "How do I explain what a function is?" And it's been really interesting from that perspective.
Michael Kennedy: Yeah, you talked about the videos being available on YouTube and until I was talking to Cecil last night I didn't really realize that. I just went to the Twitch channel and there's a video section, and I'm like, "Oh, these must be the videos that I get to look from over in the past." but there's a whole separate YouTube story around your channel and stuff people can check out.
Panelists: Yes, absolutely. 'Cause what we're trying to do is make it so that it's not just a one shot and then it's gone kind of thing.
Michael Kennedy: Which is great.
Panelists: We want to be able for my own benefit too go back and reference how did we set up those virtual environments that first time? And so one way we found to do that, well it's twofold what we're doing, exporting to YouTube, you can do that directly from Twitch, Twitch gives you that ability, and then creating a blog post stream note kind of thing that we've been posting on a website called dev.to which is a very developer-centric blogging thing. So it's like we went from Medium.com to do a lot of our tech blogging and now dev.to is a more comfortable environment specific to us.
Michael Kennedy: Yeah, what are you thinking about the Medium story these days?
Panelists: I've never really been too deep into blogging so I don't know that I have a strong opinion one way or the other. I am really enjoying writing and posting on dev.to nowadays because it's just markdown, not to say that you couldn't really do that in Medium I think.
Michael Kennedy: There's just all that drama around Medium going paid, putting up the paywall in a lot of places and I think that struck a lot of people as a little bit off.
Panelists: From that perspective as somebody that's a casual Medium I'll go there, like people link to it. I get frustrated when I open up a website whether it's on my phone or on a desktop and I'm immediately presented with some type of notification, right? A platform that's supposed to be allowing people to read, maybe if I'm midway through it, hit me up with something like that, but immediately, that's where it's a huge turnoff for me, but that's with any site, not let alone Medium.
Michael Kennedy: Yeah, yeah, yeah, sure. Cecil, what do you think about Medium? Are you a fan, did you see that as frustrating when they went paywall?
Panelists: Yeah, I saw that, I saw that and I guess similar to Brian, it didn't really affect me as much 'cause I'm not a big writer. I do a lot of video.
Michael Kennedy: Yeah, me too.
Panelists: I'm very comfortable doing video and those types of things whether it's for Channel 9 or the livestream that me and Brian are doing. I totally get them and understand why people would want to have a certain level of trust and a certain level of integrity when it comes to their written content.
Michael Kennedy: The first several years where it was taken off, people felt that I'm writing on this platform that's open for everyone, and then it became not open somewhat, which I feel like a lot of those people wouldn't have gone there in the first place had they known that was the destination, you know?
Panelists: Yeah, I totally agree with you and I think one of the reasons why we do appreciate dev.to is it's built on open source technology, the code for it is all actually open source. You could go look at it, you could contribute to it, it's open from the ground up. Which is a great thing.
Michael Kennedy: Yeah, that's pretty awesome. Yeah, so people can find this stuff on YouTube, that's cool and we'll put that link in the show notes and they can go back and check it out. Brian does it cost anything to be as a participant to watch your channel or anything like that, how does it work?
Panelists: No, everything is absolutely free. You just pop in, start tuning in, you can listen to it passively, you can stay really focused.
Michael Kennedy: Do you have to subscribed to get notified to get in or is it just like go to a YouTube video that's open or how's that work?
Panelists: Really you just show up to the channel and you're able to catch everything. There are options to subscribe. So if you want to get notified when things go live, Twitch has a feature where you follow and then you can turn on notifications for when somebody goes live.
Michael Kennedy: Create a free Twitch account and then you can subscribe and get an email or something like that?
Panelists: Absolutely, yeah, yeah. You create a free account, doesn't cost anything to create an account, and then you can just start watching things. The way Twitch will maybe get you to make some money is you'll see ads when you go to people's channels that way.
Michael Kennedy: I see, okay, a little bit like YouTube in that regard.
Panelists: Yep.
Michael Kennedy: Okay. And as somebody else out there wants to do something like this, what's the story there, do they have to be a pro Twitch person or how's that work?
Panelists: No, it's very beginner, well it's not beginner friendly necessarily, it can be intimidating as somebody starting out, wanting to start streaming on the platform or any platform in general. But the general advice that I give people that are beginning is to pick a dedicated time once a week, that you can consistently stick to so that you can actually get a feel for what it's like to be streaming so that you don't necessarily lose sight of being able to continue to do it. What tends to happen is people think that they might want to start streaming and then they'll do one or two here and there and then they won't find the time to do it. It's kind of like having a TV show, people come to expect to see you at a certain time and date, and if you're not there, then you lose that traction that you might get
Michael Kennedy: Probably even more so than blogging or even podcasting 'cause it's the live interactive is the bit that's interesting so you've got to have it on a predictable timeframe.
Panelists: Yes, for sure. And then the other bit of advice I'd say in terms of actually setting it up technology-wise, I mean I could go into detail about what I use, but really I just say, keep it basic, just have a camera and share your desktop and have whatever microphone, start simple, and build upon that as you start realizing that you're really into doing this, you enjoy it, right.
Michael Kennedy: Yeah, I've seen some super elaborate setups that various people have, especially in the gaming world, like racing simulators and all sorts of weird, crazy, awesome looking setup, but yeah, you can get started pretty easily, huh? I don't know, I mean the mics that we're sitting here talking on, they probably sound pretty good, but I guess the normal podcast mics and these are like 70 dollars, and I guess you probably wouldn't need much more that that, plug it in the USB and you're good to go.
Panelists: For sure, you could definitely go that route, but I mean, use what you have to get started to get a feel, to make sure that you really are interested and dedicated to continuing doing it before you make that investment, right? I think what ends up happening is people, there's all kinds of options and things and hardware, and you can geek out over it like crazy, right? I'm sure as you start getting into podcasting you start off on certain types of hardware and then you dig deeper and you get into this elaborate setup that you got now.
Michael Kennedy: I spent a ridiculous amount of money on microphones to end up back on the cheapest option.
Panelists: Oh really?
Michael Kennedy: I spent over $1,000 on microphones.
Panelists: Oh my gosh.
Michael Kennedy: And these like I said are 70 bucks, and I like them better than all those others. It's just like, you just got to search. But it would be ridiculous to do that at the beginning, but if I do this two shows a week every week for four years, it makes sense to start to go and see what works, right?
Panelists: Right, exactly. And I think people will get intimidated and basically they stop themselves before they even get started because they're worried about what they're going to use setup-wise. And you'd be surprised that the viewers actually, they'll know that you're a beginner streamer, but that will make them feel even more involved with it because they're first, they're the first post on.
Michael Kennedy: They want to support you.
Panelists: And so that makes it interesting. And then they'll see you evolve over time, and add to it, and support you that way and that's what the culture is all about there.
Michael Kennedy: It sounds pretty welcoming, really.
Panelists: Yes, it absolutely is. I mean I've had, for the most part had a very positive and pleasant experience with the developer community on Twitch. That's not to say there isn't some negativity and the usual trolling that goes on that happens every now and then.
Michael Kennedy: It is online.
Panelists: We're on the internet, folks, right? But for the most part you'll see it's very kind atmosphere on the platform there.
Michael Kennedy: That sounds really cool. It seems like it might be a good idea to have a content calendar in the early days. Before you do your first stream, plan out what does the next month look like because I can see it'd be so easy to get really into it, excited, do the one or two things you have on your mind and then go, I don't really know what to do now. You have a pretty long term plan, I guess, Cecil with the course for example?
Panelists: I mean I guess it's a long term plan.
Michael Kennedy: You had no idea.
Panelists: Again, when we first started this, it was Nina's course, learnpython.dev, it's two days and we're at month four, four plus now, and we're just in day one. I'm going to assume that we got at least another four months.
Michael Kennedy: Sounds like a long term plan you guys got.
Panelists: But we have spoken a little bit about what are some other things that we'd like to do, just in terms of topics.
Michael Kennedy: Yeah, that'd be great, what else are you thinking?
Panelists: So first of all a lot of this too is also coming from the chatroom. The chatroom on Twitch because we have a wide range of experience levels there from people that are brand new and have never seen code before to folks that write Python for a living and again, just engaging with folks in the chatroom and in the livestream they suggest topics, like, "Hey, could we talk about this?" And we did one last week on pipenv.
Michael Kennedy: Right, right.
Panelists: On pyenv. And that was because some folks in the chatroom they kept asking about it, so we're like, "Let's just do it." And now seems like a good time to do it.
Michael Kennedy: Yeah, yeah, yeah, you keep saying pip3 or python3 -m venv and then they're like, "Well, I've heard there's other things," so you could just make that the topic of the day.
Panelists: And what becomes important there now too is because we want to remain beginner friendly it's important that we have a certain amount of foundational content there first. Because I think the first time somebody suggested it I was like, "That seems like a little bit ahead of where we want to be right now, it seems a little bit intimidating." it was intimidating for me.
Michael Kennedy: And how 'about we start with some machine learning, can we do self-driving cars and put it on an RC car, like let's start there, right, maybe not.
Panelists: Folks have asked about Docker, they've asked about machine learning, about web stuff, but again, we're in day one, right? Four months later we're in day one, but we're just trying to make sure that we cover our bases and make sure that everybody understand what is a function, and understands what's conditional logic and then what is an environment, and what is pip and what is a package and where does this code come from, does it just come from outer space and now I just use it? You know, what do those things look like because I think unless you have that foundational information you're not going to understand the benefit of using this tool and so instead of answering the question for that one person, let's answer it for everybody and just make sure that we're all on the same foundation.
Michael Kennedy: I find it very powerful to say, it's one thing to write down here's what you do to do a thing, it's entirely another to see here was the blank screen, and nothing complicated happened, and then now here's something awesome created. I think just seeing that built up is a really powerful experience and it seems like that's a good part of the channel, like you have screen sharing, you got the editor open using VS Code a lot of times, and you're over there working on that, that's really great for beginners.
Panelists: There's a lot of opportunity on both sides of the table. I've definitely learned a lot, I'm sure Brian would say the same thing, he's definitely learned a lot, it's definitely affected even our jobs to be honest with you.
Michael Kennedy: This portion of Talk Python to Me is brought to you by the University of San Francisco. Learn how to use Python to analyze the digital economy in the new masters and applied economics at the University of San Francisco. Located at the epicenter of digital disruption, USF is the ideal launching pad for the next phase of your career. Their new STEM designated economics program doesn't just provide technical training and high demand skills like machine learning, causal inference, experimental design, and econometrics, it takes the next step teaching you how to apply these techniques to understand the economics of platforms, auctions, pricing, and competitive business strategy in the world of big data. The program is open to beginner and to advanced coders, looking to apply their skills in a new area. Applications are now open for the Fall 2020 classes. To learn more and get an application fee waiver, go to talkpython.fm/usf, that's talkpython.fm/usf. Tell us about that, what's happened or how has it influenced you outside of what you're doing on the channel itself?
Panelists: Sure, so under Developer Advocacy, it's more than just .NET and it's more than just Javascript, there's a whole ecosystem of languages and tooling and libraries and SDK's and those types of things. We were talking about it yesterday, the Python SDK for Visual Studio is 10s of millions of downloads, it's easily one of the most popular one that's there. But now, knowing Python a little bit better, I could go in and look at some of these features and understand why would these features be beneficial and why would you care about them.
Michael Kennedy: Right, or maybe even give feedback to the team like, "Yeah, technically this works, but it's not the way the community would first guess."
Panelists: Yeah totally, definitely going to be able to do things like that. And now even, again at day one four months later I'm thinking about what does it feel like to publish a Python web application? So I have a background in web development and web APIs from a .NET perspective, you know what I mean? Brian knows about Express and Node and Javascript things, I'm kind of curious, what does it look like to take that existing knowledge and apply it to Python?
Michael Kennedy: How much is it the same, how much is it totally different?
Panelists: How much is it the same, what does it feel to actually publish something and build a web API and build a web front end and add Javascript to it and CSS. What does that publishing tool chain look like, and then how does it feel like for us publishing it to Azure 'cause again we work in Azure and Azure pays the bills, right, so we got to talk about that a little bit.
Michael Kennedy: Brian, how 'about you, how has it affected your role here?
Panelists: Very much the same what Cecil was saying, we're seeing opportunities where we can help contribute in those respects to Python outside of the ones that we got hired on for, but in addition to that, case and point in Microsoft Ignite here, I just gave my first talk that involved Python ever at Ignite of all places, you know? So yeah, it's been really fun and exciting and it's kind of nice to just add that to the developer tool belt, my skill set there, right?
Michael Kennedy: Yeah, I'm sure it lets you connect with that whole area of the industry that maybe just being a pure Javascript developer you couldn't relate to as well.
Panelists: For sure.
Michael Kennedy: What's your plans for topics? Have you guys decided? I know you have four more months of Nina's course, but do you actually have any idea what you're doing next?
Panelists: Nah, I have no idea. Nah, I'm just kidding, so with my other streams, the Python stream series that we have, it's probably the one I have that's most planned out honestly, the other ones I just have a general direction and I just go with it. With ours we're going to finish going through Nina's, looking at Cecil to make sure we're on the same page, I think we are.
Michael Kennedy: Yeah, you're going to decide on the spot right here.
Panelists: Everybody's going to hear it in the podcast now for the first time, exclusive. So we're going to finish up the course and I think we're going to start building out little tools and fun ways to integrate that, like getting to the point, like Cecil was saying, where we're going to publish something in production and run it that would maybe even interact with the chatroom and through the Twitch stream and that kind of thing.
Michael Kennedy: Right, right, maybe some sort of API out there on Flask or something that then drives who knows, people could talk to you and something happens.
Panelists: Yeah, and the other thing I've actually been itching to get into doing is a little bit of IoT, which is what I spoke about here at Ignite. In particular a lot of times my office at home running all this stuff, this hardware to do the stream, it gets hot in there and I have to, this is a lazy moment here, but I have to get up, and I have to turn my fan on to cool the room off, but that's me stepping away from the show so I can go do that, so I'd love to have the IoT device listen for the temperature with Python, maybe trigger the fan to go on on its own kind of thing, but we'll see where we go with it.
Michael Kennedy: It does sound a little bit lazy, but I also find when I'm recording a show or I'm doing something where I'm programming, I'm deeply engaged, you don't feel like it's a little hot, you get knocked out of your flow, you're like, "Dang, it is hot in here, how is it so hot, what?" And then you got to get up, and it breaks your thought, and you're live streaming I think you don't want to do that.
Panelists: Exactly, you're getting all sweaty, you got the headphones on covering your ears, it's three hours later.
Michael Kennedy: Dang, I'm tired, well it was 95 degrees in here, what was I doing, and you guys are both in Florida where that's a legitimately common thing, right? Yeah, I wanted to ask you about the interaction with the audience, so maybe Cecil, I'll go to you first on this one. What I've seen when people come in they'll like send you feedback or say I have a question about this or what if you, it's cool that you wrote the code this way, but what would happen if you made this tweak? Have you or do you have any plans of having deeper requirements for participation like, "Hey, everybody, what I want you to do is write this program and then we'll come discuss it." or "I want you to read this article, and then we're going to dive into it." or anything where people need to come more prepared, or is it all just drop in and take it in?
Panelists: I think we've loosely spoken about it. So yeah, if you look at Nina's course there is a practice section. So again it's two days, and each day at least the first day was split up into eight separate modules, and at the end of the module is a practice section, which kind of is just exercises and muscle memory exercises that you could do to remember what we just did and we don't usually do that one on stream, that's usually an exercise that we leave for the folks that are looking at the YouTube video or the livestream to do it yourself. We encourage, "Hey, well we didn't do this little piece of it, but please you go ahead for your own practice, and just understand it, go ahead and play around with it." But I can imagine going forward in the future we can have more ways for people to interact with things.
Michael Kennedy: I don't know if it's with the zen of the show, right, like if you have too much of a requirement the people who would just drop in it might just turn them off, right?
Panelists: We don't want to do it in a way that it makes you feel left out. If you come in week 20 and this is your first time being on the show, you should still feel very welcome and included, and whatever it is that we're talking about. Subject matter may or may not be a little bit over your head depending on what your experience level is, but you should still feel welcome to sit in the room, we're all at the table and we're all learning together. We spoke a little bit about having a submission form for questions, and for also topics. When this thing is done, what are some of the things that you want to learn about and maybe we could do a voting thing.
Michael Kennedy: Right, you could let 'em vote on it and see what one gets voted up or something like that.
Panelists: Yeah, do a voting thing. But I think anything that we do in terms of interactivity would be very subtle, it won't be like you have to do this else you can't sit in this chatroom kind of thing.
Michael Kennedy: Yeah, it won't make any sense unless you've deployed your app yet.
Panelists: Yeah, it's not going to be that serious, but hopefully it will be something fun and interesting and maybe we'll turn some more lights in Brian's office, turn on his fan and stuff like that, we'll see what happens.
Michael Kennedy: The IoT thing is fun, it's definitely got a good Python angle, you could do MicroPython or CircuitPython. Are you thinking of getting something from Adafruit or something like that, Brian?
Panelists: Well, it's so funny you say that 'cause that's what the talk was about was the CircuitPython Express by Adafruit.
Michael Kennedy: Nice yeah, that's such a cool little device, right? It's 25 bucks and it's got quite a bit of smarts on it.
Panelists: Oh my gosh, yeah, I'm so blown away by it. Everything that's built into that little device that you can do and it's just so fun, it's great with the same sense that we're talking about before, beginner friendly type stuff. If you're looking to get introduced to programming, introduced to electronics that thing is a great way to go about doing it and introducing yourself or students, that kind of thing into the whole atmosphere.
Michael Kennedy: Yeah, I feel like the programming for that stuff is not too intense often as well. It's not like, "We've got these 10 files, here's where the CSS is, and here's the database migration." usually there's the code.py or main.py and you just put it there and it's pretty straightforward.
Panelists: Yeah, they did a fantastic job of making that device, like removing the friction of setting up all the things. All you do is change the code.py file and you're good to go, it'll recognize that you made changes and load it all up and get things running.
Michael Kennedy: It's really interesting, it came from the BBC micro:bit the whole idea of the MicroPython stuff I think, certainly that's where it first was used a lot and there were a bunch of really interesting studies around exposing kids to that. I think every seventh grader in the U.K. got one for one year, they did a bunch of studies and girls were way more likely to say, "Coding is something I would consider as a profession." compared to before other groups who do that or whatever and it just seems like that little hands on bit has such a powerful effect, especially for kids who don't want to wait for a website to be built, like really a long ways.
Panelists: I think that's fantastic and anything that can help make it more welcoming and encouraging for people of all kinds of backgrounds and experiences to join in on it is a fantastic thing. I actually even experienced it with my own daughter as I was preparing the talk I was tinkering with the device, getting acquainted with it, and so we have it set up to where if you shake it it will turn the lights on or off and she's only two years old, but she's still like, "Wow, look at these lights." like it's going on and off. And I thought that was the coolest thing, and I'm glad I have it now because it'll be a great way to give her the opportunity to explore that area out if she's interested in it.
Michael Kennedy: That's super cool, Cecil do you do anything with your son, how old is he now?
Panelists: Cameron's seven. We haven't done anything in terms of getting him on the keyboard to type stuff or anything like that.
Michael Kennedy: It's a little bit early 'cause it's like the working with the words and the letters probably at that age, it's still a little challenging, but like, it's soon, right?
Panelists: What I have done, so there's this little robot set that he got, and robots as in they're cardboard robots. But essentially what it does is that one, it kind of gets you in the habit of putting pieces together, and then the robot becomes functional, right? So there's a lever and the arms raise and the head tilts and it does stuff like that and then there's this one other, I don't know if it's really coding or not, but it's a programming tool where you have this little robot, a real robot, like a plastic thing with wheels on it, and there is an input device that has three buttons on it, there's right, left, and there's forward, and you could depending on the combination that you put in you could use it to, it'll detect the wall, there's a sensor in front of it, you can tell it what to do when it sees a wall, so you put in the input with that little device and then you could have it go through an obstacle course.
Michael Kennedy: I see.
Panelists: I'm trying to remember what the device is called. Honestly, don't remember. It's one of the many toys in his room.
Michael Kennedy: And then right, then right, and so you can hit that key combination or something like that, yeah?
Panelists: Right, right, so you put some blocks and whatever the case is on the floor and you put in key combination, but at some point you're going to hit the wall in the room, what does it do when it sees the wall? He's done things where he has it turn the opposite way around and does the obstacle course in reverse or have it go out in the hallway or have it do different things. And then it also has a backhoe thing, like a scoop in front of it, so you can have it pick things up and move around and put it somewhere else.
Michael Kennedy: Go get your Lego and carry it around or something?
Panelists: It's kind of programming, kind of not.
Michael Kennedy: Yeah, yeah, it's like programming without the words.
Panelists: There's no computer involved. Right, and that's what I kind of want to do. I want to get in mental mindset of problem solving and not necessarily being in front of the screen. 'Cause this is something that we can do in the backyard or on the porch or on the living room, you don't have to be on a screen, on a tablet, or on a smart device to do it.
Michael Kennedy: That's cool, yeah, my daughter who's 11 in sixth grade, she was really into CodeCombat.com where you go, and you go into the dungeon and you solve the problem, you actually type python, but the auto-complete is so incredible, you can say hero.attack_enemy and you type a and it auto-completes that whole line, you know what I mean. So there's a bunch of cool opportunities around that so maybe Brian, let's talk a little bit about your setup. I know you said people can get started with whatever, but I was wondering 'cause when I go and watch you, you're a disembodied person stuck in the corner, you've got a cool green screen and some mics, and you've got a bunch of stuff that'll rain down, you can do all these little sounds and you talked about the light, so maybe give the people a sense where you could go with hardware and setup and stuff.
Panelists: I originally was streaming from my MacBook Pro, the 2016 model, and I found that it can work on there just fine, streaming from there, but the fan starts spinning up and that's all you hear, and you can tell it's just really cranking out as hard as it can to support all this. And so then I of course being the technologist enthusiast that I am...
Michael Kennedy: Maybe something with two GeForces in there would be better.
Panelists: Yeah, so I built a custom PC that I could use from gaming and for this, so it was kind of like two-fold there. And that thing is more powerful to handle streaming. So obviously the better the hardware that can do a lot of the video encoding and uploading and having a good internet connection through your internet service provider is key.
Michael Kennedy: What's the resolution you stream at?
Panelists: I stream at 1920 by 1080.
Michael Kennedy: That's pretty high.
Panelists: Fairly high. I mean that's really the range that you want to be at, well mostly for gaming 'cause I was doing some game streaming, so you could go down to 720p if you wanted to and people won't mind that especially for programming.
Michael Kennedy: Yeah, sometimes it helps to have the smaller resolution so you can actually read the menu items and stuff a little bit, but yeah, it's always a trade off.
Panelists: Right.
Michael Kennedy: Alright, so you got this pretty awesome PC that you built out.
Panelists: Yep, and then I have a combination of cameras, cameras that are really work related that I'm using for that that we do and shoot other videos with.
Michael Kennedy: Are these fancy webcams or DSLRs?
Panelists: I started out with just the Logitech C920, which is the standard go-to one that every streamer pretty much is using. It's relatively priced well, and I think they have a newer model now so you could probably even get that one, the 920 at a cheaper price that what it used to be. But then the big one that I use that I don't take advantage of the full capabilities of it because I'm a little bit limited with some of the hardware that I have that interfaces with that, but I have a Canon XC15 which can do 4K at 60 frames per second.
Michael Kennedy: Okay, that's pretty awesome.
Panelists: But I'm only really getting 1080p at 30 frames per second.
Michael Kennedy: Right, but that's just for your body, which is a small little thing in the corner so it's probably fine, right?
Panelists: That's why I'm not worried about it. I could upgrade to another device that captures that video at the higher resolution and frame rate.
Michael Kennedy: Maybe if you were streaming just you and not you plus screen.
Panelists: Absolutely, yeah. So yeah, and then I use the green screen to help because the big thing, like you were talking about before you want to be able to see a lot what's going on and so I grab the green screen to help remove some of my background so that people could see what's behind me if something's going on there, notifications or whatever, that'd be available.
Michael Kennedy: What mic do you use?
Panelists: What microphone? A Rode Podcaster.
Michael Kennedy: That's a pretty good one, that's one of the ones I've tried.
Panelists: That's how you pronounce it, right?
Michael Kennedy: For sure, I've definitely tried that.
Panelists: It's not necessarily the best, but then I have software that helps clean up a lot of my audio, I'm using Voicemeeter Potato, and Cantabile to help do some pre, I don't even know the technical terms, I'm just winging it honestly with this stuff, man. But it's doing a lot of noise filtering before it even gets to Voicemeeter and then into my streaming software, Voicemeeter you can pay for, it's like nagware, they will ask you, and then there's a free version of Cantabile. The main streaming software you're going to be using if you want to get started is called Open Broadcasting Software or Obs, O-B-S. That thing can be very intimidating, but once you get, there's tons of YouTube videos out there that'll help you get acquainted with it and once you get the gist of it, you'll really be able to come out with some cool stuff like you've seen on the stream there.
Michael Kennedy: Yeah, the stream is super cool, I think you're doing a really nice job.
Panelists: Thanks.
Michael Kennedy: Yeah. I guess give us, if somebody wanted to do that, what's the price tag, is it expensive, like how much of this stuff costs money? Obviously the Rode Podcaster's like $300.
Panelists: Like I was saying before I would start simple. Use whatever you can and then slowly iterate on there and add to it. But I don't even know what I'm up to. It's like every couple of months maybe, I haven't even done a recent hardware update, I've just been happy with the setup now that I'm at, but I would say every couple of months or so look to see, let me see if I can upgrade the microphone or I can upgrade this aspect of it. That's what my advice would be around that.
Michael Kennedy: Okay, cool. And Cecil, you're pretty much just using your podcast stuff and whatnot?
Panelists: I definitely had some podcasting material equipment from before, so I have a Scarlett box, very similar to the Scarlett box you have right now. I just have an XLR microphone and that's really about it. I have some software on my computer that I used to use for audio filtering and those types of things, but that's really about it. The stream is not coming off my machine, so essentially what happens, Brian and I are not in the same location when we're streaming, so I will call him via some video conferencing software and he'll just...
Michael Kennedy: Like Zoom or Skype or something like that?
Panelists: Zoom or Skype or whatever the case is and he'll just put me in into a frame on the screen.
Michael Kennedy: And you can do that with this Open Broadcast Software? That is fancy, that's awesome.
Panelists: Yeah, OBS is pretty cool. So you can have different screens and different setups so now we can have one where both of us, both of our faces are on screen or I think he has another scene where I could share my desktop and so now my desktop is in full view and we just have little floating heads in the corner. So that helps too, right? So now we can both be on screen, but now you have a full view of the code and the editor and my desktop and whatever else we're talking about.
Michael Kennedy: Yeah, it looks like Brian's really got it dialed in, that's awesome.
Panelists: Yeah, I'm lucky, I just piggyback off of whatever he's doing. I just show up and talk and Brian does all the hard work. We patch in the sound effects and everything that people can play so that he can hear when things happen, it's kind of hard being on a video call, you don't want to have the stream up on your machine and the volume loud so it comes through your microphone so I patch all the audio into the video call with him so that he can hear it, and it's all through that Voicemeeter Potato software, it's super helpful.
Michael Kennedy: Your own little broadcasting booth, it sounds like it.
Panelists: It's a ton of fun, man.
Michael Kennedy: What's the name of the software again?
Panelists: Open Broadcasting Software. It's up on GitHub, you get it for free, it's open source, it's cool.
Michael Kennedy: Alright, guys, well I think we're getting pretty short on our time, and this booth is going to run out, so really quickly, one question each to close out the show. When you're writing some code, what editor do you use?
Panelists: Visual Studio Code.
Michael Kennedy: Alright, Cecil?
Panelists: This is not even fair. I also use Visual Studio Code.
Michael Kennedy: Right on, not a big surprise is it especially with some of the announcements today, that's cool. Alright, guys, thanks so much for being on the show and sharing a look inside the Twitch stream and all that, it's been fun.
Panelists: Yeah, awesome, and definitely love for folks to check it out and we'll have the links and stuff like that inside of the show notes. So hopefully you can see us every Wednesday at 11 o'clock at 11 a.m. Eastern Standard Time on Twitch.
Michael Kennedy: Alright awesome, thanks, bye. This has been another episode of Talk Python to Me. Our guests on this episode were Cecil Phillip and Brian Clark, and it's been brought to you by Linode and the University of San Francisco, start your next Python project on Linode's state-of-the-art cloud service. Just visit talkpython.fm/linode, L-I-N-O-D-E, you'll automatically get a $20 credit when you create a new account. Learn how to use Python to analyze the digital economy in the Masters of Applied Economics at the University of San Francisco.
Panelists: Just go to talkpython.fm/usf to find out more. Want to level up your Python? If you're just getting started, try my Python Jumpstart by Building 10 Apps course or if you're looking for something more advanced check out our new Async course that digs into all the different types of async programming you can do in Python. And of course if you're interested in more than one of these, be sure to check out our Everything Bundle. It's like a subscription that never expires. Be sure to subscribe to the show. Open your favorite podcatcher and search for Python, we should be right at the top. You can also find the iTunes feed at /itunes the Google Play feed at /play and the direct RSS feed at /rss on talkpython.fm. This is your host, Michael Kennedy. Thanks so much for listening, I really appreciate it. Now get out there and write some Python code.
