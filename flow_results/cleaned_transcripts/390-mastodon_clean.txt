Wondering what Mastodon is all about. More importantly, what does it offer Python developers and other open source folks compared to Twitter? There's a huge amount of interest in the tech community about what's happening at Twitter and about whether people should expand to or even entirely move to a new location. So I decided to put together a set of experience Python developers who have been Mastodon inhabitants for a long time to discuss what this unexpected shift means for one of our most important online watering holes. On this episode, you'll meet Gina Huska, Simon Willison, Carol Willing and Juan Luis Kano Rodriguez. We're going to have a great time talking about the technology and the culture amassed it on from this Python perspective. This is Talk Python to me. Episode 390, recorded Monday, November 14, 2022.
A weekly podcast on Python. This is your host, Michael Kennedy. Follow me on Mastodon where I'm @mkennedy and follow the podcast using @talkpython, both on fosstodon.org. Be careful with impersonating accounts on other instances. There are many. Keep up with the show and listen to over seven years of past episodes at Talkpython.FM. We've started streaming most of our episodes live on YouTube. Subscribe to our YouTube channel over at Talkpython.FM/YouTube to get notified about upcoming shows and be part of that episode. This episode is sponsored by the AWS Insiders podcast. AWS is changing fast. Listen in to keep up over at Talkpython.FM/ awsinsiders. It's also brought to you by Microsoft for startups founders hub get earlystage support for your startup without the requirement to be VC backed or verified at Talkpython.FM/Foundershub. Transcripts for this episode are sponsored by Assembly AI, the API platform for state of the art AI models that automatically transcribe and understand audio data at a large scale. To learn more, visit talkpython.Fm/assemblyai Hello, Carol, Gina.
Juan, Simon. Awesome to have you here.
Hi there.
Hello.
Hi, good to be here.
Hey, Michael and everyone. Good to be here.
I don't know if you all have.
Heard, but there's bit of a turmoil over at Twitter and I think you could hardly hide under a rock and see that. Even the people who were living under a rock like, oh yeah, I heard about the Twitter thing because every news channel is just like they bring on the expert that talks about interviews and various things that are going on. And I want to kind of start this episode just with a comment about Twitter real quick before we talk about maybe the alternative or destination or parallel universe. Twitter has been a really important community for me, and if I say anything negative about what's happening at Twitter, I don't want people who have been really great members of my community to feel like that's anyway directed to them. It's been a really positive experience to be with so many people over there and it's only with concern and worry that I would lose that community, that maybe something might happen to Twitter. Either it gets wrecked and it's a place that people don't like or advertisers flee and it goes out of business, or who knows what the future holds? But that's sort of what got me interested in alternatives, and Mastodon turned out to be a pretty interesting alternative.
So maybe we could kick this off.
With just a really brief introduction and your perspective on that. Carol, we'll go down the video this year.
Yeah. Hello, everybody. I'm Carol Willing. I'm a longtime contributor in the Python and Jupyter ecosystems. Right now, I'm a geek of engineering at Notable, which is a SAS based notebook platform.
Yeah, I've been a longtime user of Twitter, and it's been great for community stuff, but I am concerned about the future, so I'm interested in hearing what everybody else has to say as well.
Yeah. Welcome, Carol.
Gina thank you.
Hi. My name is Gina Husker. I'm a full time open source maintainer of my own project, Octoprint, and now for almost ten years. And I think my Twitter account was created in April 2009 and my Mastodon account was created in January 2020. So I've been a longtime Twitter user. It was my Goto social network after Google Plus went down, and I've met a lot of amazing people on there. And I really hate to see this community maybe go down now or something, I don't know. But in any case, that was also the reason why I jump ship quite early. And yeah, not jump ship, but just try to establish a new home, a new ground base, and gather my friends around me there again, so to speak.
My feeling is sort of my terminology I'm trying to use right now is sort of Mastodon first, but not I'm deleting my Twitter account and I'm out of there. That's the way I'm thinking of it.
Exactly. I'm absolutely not deleting it, but I am now. I switched the cross poster direction and also the cross poster, I switched it from opt out to opt in one.
Hello, everyone. My name is Juan Lewis.
I'm from Spain, and since the past two years, I've been working as an advocate. So the social media aspect has been really important also for my work, even though I've had a long term love hate relationship with Twitter in particular. Right. So I don't remember when I first signed up, because I have removed my account and then signed up again at least two or three times.
But I very vividly remember lots of political things happening and following elections and important stuff happening in not only my country, but everywhere in the world through Twitter and getting the news from there. So for me, it's been a very important part of who I am as a member of the society and as a person concerned about the problems of the world, of course. And I'm also very sad to see it go that way. I have a story of working in the space industry as well, so I know how the new boss of Twitter operates, perhaps better than other people. At the same time, I'm very hopeful for the future of not only Mastodon but the whole feediverse. Because in a way, it seems like the very first time that we're trying this idea for a massive audience. Not just like, seemingly small number of people very concerned with free and library software and so on.
But we are experimenting with how this looks like for many more users than we could imagine two weeks ago. And probably much larger, obviously, than what we can motivate as well.
Yeah. Two weeks from now it's going to be crazy different than now as well. There's so much action as people are going to find out, I think. Yeah, so you're in an interesting situation, whereas your job as an advocate, dev advocate, you've got to be on social media, you don't get to choose. And so you've got to go where people are and where the action is.
Yeah. It's a whole conversation, like whether advocates should be on social media or if it's a requirement or not, but staying where the community is, is part of the job.
Yeah.
And you've also been on Mastodon, you're one of the old timers, the old guard, as they say over there. So that's excellent.
Been like a year and a half, so I wouldn't consider myself all timer, but I've been concerned for about the Fediverse and alternative social media stuff for very long time.
Awesome.
I can count how long I've been on the Feedverse on my fingers and days, so excellent.
Simon welcome to hi, I'm Simon. I'm a full time open source developer in Halfmoon Bay, California, working on data set tools for data journalists and others to share and publish data. But I've been on Twitter for 16 years. It turns out I signed up in November 2006 on user number 12,497 because back then, Twitter had incremental IDs their users. So I can tell you exactly where I was. And actually I ran a startup built on top of the Twitter API for three years, which was then acquired by Eventbrite, moved us out to California. So Twitter is responsible for a major piece of my career at this point. And, yeah, I had ignored the Fediverse entirely for five years because I understood the Usability challenges around being decentralized and so forth. And I'm like, you know what, twitter works fine and it's a public company. What could go wrong? It turns out what can go wrong is the world's richest man can buy the company in a fit of narcissistic whimsy and everything falls apart. So right now, I'm trying to find the alternative source which cannot be bought by the world's richest man or bought by anyone else. And Mastodon appears to be in exactly the right state and exactly the right point in this development for this crazy moment in time right now.
I was staying there and like I said, I have this sort of I'm going to kind of be Mastodon on first. I'm certainly not to lean Mic out. So staying is I guess I'm still, in a sense, staying, but I was mostly focused there because my people were there. But over the last week or so, what I've come to realize is, wow, mastodon is way more in tune with open source free software, unaffiliated tech organizations than any of the corporate big tech.
Sites are, in a very interesting way.
Yeah, the growth of Mastodon in the past week has just been astonishing. Like, it's hockey sticking and it's all people I like. You know, I'm finding people on Mastodon who I didn't know, who are great, many of the people I care about on Twitter of making the migration over as well. It just feels like for my particular niche of nerds, it seems to have hit exactly the right resonance, which is really exciting. And also the thing I've always loved most about Twitter is there are lots of subsets of Twitter. You know, there's like wildlife conservation, Twitter and science, Twitter and all of this. And they haven't all come over, but the scientists who are in bulk, the academics, have moved to Mastodon in bulk. It does feel like Mastodon is not just going to be the kind of nerds who can figure out Mastodon, which I was I was worried. I was worried it would be people in Mastodon and nerds who want to talk about mastodon, and that's so not the case, which is thrilling to me.
Yes, that exactly was my concern as well. It might be a small little niche set of very techy people and that's great, but it seems I've had a bunch of filmmakers and journalists and folks.
Greenwiches are showing up.
Yes, it's amazing. It's really great. Let's see. Real quick question. This one goes to Juan first, David audiences. So you weren't concerned with Twitter previously? Only when Elon took over. Or I guess it's more of a group, good question.
Yeah, they said it was kind of directed to me, but I will others say their opinion. Yeah, kind of what Simon said already. I was also concerned about the idea of a whole entity, a whole media site being up for being bought by a single person, which might happen, I don't know, for Facebook, it's already bought by a single person, right? In a sense. But it might happen to your favorite social network at any day. And the fact that now the feedverse is gaining traction and it's distributed puts some barriers to that. But apart from that, Twitter has, in a sense, been a victim of its own success, in the sense that the algorithm, the famous algorithm that puts more famous tweets up front or things that you might engage with. And so forth. In the end, it ends up favoring maybe things that make you angry because the algorithm knows that you're going to engage with.
They really respond well to this one here.
But what about Nazis? This is so popular, let's share that.
Or Python versus Ruby. I don't know, like all sorts of things making you angry or maybe just silly memes that happen to be fun to watch, but I don't know, like make you lose some neurons. So I think my quality of life improved a lot when I switched to the chronological timeline. So when I disabled the algorithm, but I had to put lots of measures like a browser extension that hides the trending topics and blocking people like there's no tomorrow. I don't know, I had to develop my own habits to make Twitter sustainable for me. And Elon Musk buying it was just the icing in the cake.
It pretty much went the same for me, I gotta say. So I started taking extended Twitter breaks, especially over the weekends when the pandemic started, and then even more so when the war started. And just because of all this negativity that constantly got flooded into your timeline. And I already was on the chronological one and it still got flooded into there because obviously people who weren't on the chronological one gutted via the algorithm. Then I was about to say boosted it, and I thought that now they retweeted it and that way then it ended up in mine and I had to mute so many people, I had to add so many filters to my experience and all of that. In the end, I got a very filtered and very tame version of Twitter, but it was still way before that guy bought it.
It was way before that already. Just another sink of my energy, actually. And with mastodon, I never so far have had I've been very active on there ever since the first hey, I'm going to buy Twitter happened, I think April or so this year. And it was just like a completely, utterly different kind of experience. Like, I met a number of people that I would never have found on Twitter who I now interact with a lot because they are just genuinely interesting and do very, very amazing stuff. And there are copy barrels and squirrels in my timeline way more than there were before on Twitter. So I enjoy that stuff. And there is still the bad things and still the serious stuff and still the news, but they are tamed. They are not amplified to a thousand and that is really there's not an.
Algorithm boosting it even more. Yeah.
This portion of Talk Python to me is brought to you by the AWS Insiders podcast.
When was the last time you ordered a physical server to host your functions as a service? Your latest API or your most recent web app? I remember the last time I did that was around the year 2001. And yes, it was quite the odyssey. Of course, we don't do that anymore. We run our code in the cloud with near instant provisioning and unparalleled data centers. And the most popular cloud provider is AWS. But for all the ways that AWS has made our lives easier, it has also opened a massive box of choices.
Should you choose platform as a service?
Or maybe it's still VMs with IAS. What about your database? Maybe you should choose a managed service like RDS with Postgres. Or is DynamoDB better?
Maybe Aurora?
No, wait. I hear good things about Amazon document DB too. And that's where the AWS Insider podcast comes in. This podcast helps technology leaders stay ahead of Amazon's constant pace of change and innovation. Some relevant recent episodes include Storage Wars, Database Edition, Microservices or Macro Disaster, and exploring computer vision at the Edge with AWS Panorama. They bring on guests to debate the options, and the episodes are vibrant and fun. So if you want to have fun and make sense of AWS, head on over to Talkpython.FM/awsinsiders. Yes, I know you probably already have.
A podcast player and you can just.
Search for it there, but please use.
The link so that they know you came from us. Thank you to the AWS Insider Podcast.
For keeping this podcast going strong.
I'm going to say something controversial. I love the algorithm. The thing I miss most through Twitter on Mastodon is that I don't have the algorithm. Because the reason I love the algorithm is I realized that it gave me the freedom to follow a lot of people. I'm following four or 5000 people on Twitter, and the only way you can do that is you make sure you don't even pretend you're going to read everything. And you trust that the algorithm will boost up a mixture of interesting things so that you can and so whenever somebody says anything interesting at all and courses, that I'll follow them. And then I'll hope that future things they say that resonate will bubble up. And for the most part that works really well for me. But it really came down to the fact that I trusted the sort of core concept of Twitter. I trusted that there were enough people at Twitter who understood why it works and what's important about it. That even while they play with NFC, avatars and fleets or whatever they call them, all that kind of stuff, the fundamentals were solid. And the reason the thing that made me lose faith was when Elon, a weekend, fired half the company. Like all of the people I know at Twitter who understood what Twitter was, they gone.
He's completely back. He's gutted for that sort of institutional laundry, what this thing is. And then his first big change that ludicrous selling verified checkmarks rate dollars, exhibited a complete failure to understand what this thing was and how this thing works. At that point, I lost all faith. I'm like, no, this thing I've trusted for 16 years to keep on working in a way that is useful. And that means I can follow my 4000 people in weird different spaces. That's not going to hold, it's not going to work anymore. And that was the point which I switched my energies to Mastodon and found that most of the stuff that I loved through Twitter was happening there in a much more pure non commercialized format. Like the commercial models are super worth talking about. But yeah. So my biggest master's on project in my plan is I want to build myself an algorithmic timeline that's just for me. And it means that it essentially takes everything from people I'm following and randomizes them a bit and looks for things that I might not have seen recently and just tries to give me a little bit of background. Background.
I kind of like that a lot. You're gonna open source that, right?
Oh yeah, I hope so.
It's going to be a massive sql queries. It'll be lovely.
Yes, I'm sure all run on sql lite it'll be amazing.
I have to say I kind of took Simon's approach. I didn't use any tools when I was using Twitter. It was whatever came up in my feed, it was the news of the day. And what was great is I would see what Simon was up to and somebody else's cool burnt pictures and whatever was going on in science. And so I had a very casual relationship with it, but it was something I looked at a couple of times a day and really learned a lot from now. There was also the other side of Twitter, which is you get a community of people together where there's some anonymity and from like a core python development standpoint and things where there was controversy maybe within technical decisions that the language was making. Twitter could be a really yucky place. Yuckier than mailing list and slack and IRC. Does anybody still view that? Probably, but all of the other channels that we also follow and I guess what I was seeing was more and more of my friends going to Mastodon and the people that I respect and like their opinions on and I was like, you know, I've never been happy with the moderation side of Twitter. So let's see, let's see how this goes. But you know, I'm like Michael very new, I count on my two hands, like how many days I've been part of Mastodon, but so far I'm super, super happy with it.
I'm as well. And I was glad to see you show up over there. That was great.
Cool.
This whole conversation is going to be part sort of the culture of tech communities, but also part technical as well.
And I think understanding how Mastodon fits.
Well with open source and those types.
Of communities has a bit to do.
With understanding how it's deployed, how it connects together, how it works. Who wants to talk about what the set of ours is? And how do you create an account? Like why are there so many weird different places I can go create an account? What is this new world? I think not Mastodon.com and I just go in and create my account. It's like the new Twitter in a way.
Mastodan is a bit like email, right?
Yes.
Like you have an open more or less well defined protocol that is actually a W3C standard called Activity Pop and Activity Streams. In email we have SMTP and IMAP and stuff and you have servers on the Internet that speak that protocol. Those are Master Social Foster or Chaos Social and anything that you want to set up a Masterhost and whatever. And the thing now is that just the same way that if you write an email from your Gmail account to someone who has their email hosted at Fastmail or on their own domain, you can also do that with Mastodon because you can write a toot and we call these toots and not tweets to someone. So I can toot to mike michael's on Sam. I am on chaos social. That works just fine because there is a common protocol shared that both servers speak. There is even in the Activity Pub spec, a concept of an inbox and an outbox. So it is very email like in that regard. And that just works. And that doesn't just work for microblogging service like Twitter or in this case Mastodon. Because when we talk about Mastodon, we also have to talk about the fatty worse. And Mastodon is just a part of the feedy worse because there is other stuff. There is an instagram alternative called Pixel Set. Same thing, open source software you can install on your server and then put your pictures on there and share them across to other Pixel set or even to other Mastodon instances because it's the same protocol.
There is stuff like a YouTube alternative called Peertube same protocol again, cross compatible, can talk to each other. We have bookworm that is a bit like goodreads by the way, witness Python. Very interesting to look into the source if you want to get an idea how to implement ActivityPub. And yeah, there's a ton of other stuff too. So currently Mastodon is very big in focus because of this Twitter alternative thing. But when you start looking into this whole fetty worse and this whole thing that powers Master tone and how Mastodon work, then you realize, hey, there's a big, big world there beyond just sending toots and talking about where else?
And it's crazy how these different alternatives can communicate together because have you seen when people share a tweet that contains a screenshot of an Instagram post that is itself like a screenshot of something that you saw on TikTok?
So it turns out that you can communicate through all these alternatives with the same protocol. It feels real that you can from Twitter, so to speak, follow an Instagram account and get their pictures on Twitter. It's like nothing we've ever dreamed of. And it's currently possible with the technology. Of course it has quirks and whatnot, but in a sense it's like prohibiting world gardens for good and just interacting with any sort of social media with a unified protocol.
Yeah, there's nobody who controls whether you have a blog or not on the Internet. Not really.
I want to use it. Mastodon here where I think the fact that this works as well as it does is a miracle. It is absolutely phenomenal. Like, people have put mastodon on itself is six years old. The activity club standards are even older than that. A huge number of incredibly hardworking, incredibly smart people have sweated over this stuff for years and years and years. And I feel like that we're getting one of those overnight success moments right now where overnight successes are always like ideas in the making that two weeks ago we all started leaping onto this thing and it hasn't sunk. Like the fact that it's actually managing to scale up with this amount of activity with there are a few glitches and some things are a little bit slow occasionally. No, I think this is an absolute miracle of software engineering. I could not be more impressed by what these people have built for us. This thing that we're diving on right now.
This is an incredibly difficult technical problem, incredibly difficult social problem, the design problem, like designing community software is extremely hard and they've done such a great job of this. So you see people sort of complaining about little details and things and missing no, come on, we all just got here and I cannot believe what an amazingly rich and vibrant world they have created and something that technically works so well and I'm just astonished by it.
Yeah, I love that perspective and I totally agree with you.
It should also maybe be added that some of the things that people complain about missing are actually intentional stuff intentionally left out. For example, a lot of people come on restaurant for the first time and the first thing that they miss is where's the quote feature? Why can I not quote this toot and set my opinion on top? And that is intentional because the idea is that masatodon you should not talk about people, you should talk with people. So comment on that thing, interact with that thing. You are free to just boost, so retweet your response so that it gets more widespread visibility, maybe. But the first thing that you should do is interact with the person who wrote something that you want to discuss or want to add to, instead of just trying to be like, hey, look what I found. And all of this is now about me and the other thing is that people miss a search. And I can totally understand that because the only thing that you can currently search is your local instance and maybe the Federated timeline. And that is also intentional because the idea is that if you are on Twitter and you are a very, very bad person who wants to target a marginalized group, then you enter some keywords and you add those keywords as a safe search. And then you constantly and constantly and constantly just abuse the people who pop up with this keyword search. And you cannot do that on Mastodon. It's not possible.
It goes a long way to humanizing and rehumanizing the tools that we work with because it does give you this sense of, hey, I'm not going to be as targeted for something I say or do that is just part of my normal open source, everyday world. But like Simon said, I mean, I think you've got these brilliant people coming together out in the open to manage a service that I have much more questions whether or not Twitter is going to fall over in the next month than I do next month.
And I guess some of that's the experience that I had with the federated version of mybinder.org, and how we went from a small group of people, you know, hosting notebooks for free for the academic world and federated it out to other institutions to handle the capacity. And it's worked out really well over the last few years. So I give a lot of credit to the folks that have been working hard for the last several years on Mastodon.
Absolutely. We should talk about the business model because Twitter, it's ads and selling your data and all sorts of stuff. The thing I love about one of the things I love about Mastodom, the business model is just so open. It's like there are volunteers who are doing this stuff. They're a volunteer. They're spending their time moderating. They're spending their money running instances. You should support them, obviously you should. But there's no advertising. You can't use the thing for free and expect it to be paid for because there are ads. There are no ads or anything. And I feel like Elon has set us the price right. The price is $8 a month. That's what he wants us to pay on Twitter. If everyone who's using Mastodon and can afford to do so puts an $8 a month towards their local server they're running on, it's going to be fine. It's just going to work. And we should all be committed to doing that, I think.
I absolutely do.
Let's talk about the instances because I think the cultural aspect, the norms especially that Carol was talking about, are really important here. And that also has a bit to do with the deployment. Now, let me track down there's an interesting place to begin finding instance there's. How many instances are there now?
4000 something.
Like that. These are basically hosts for little communities, little islands of mastodon and there's a.
Place called Instances Social and you can.
Say, well, what language do I want to speak, do I care how many people are there? Because you might want a small community or large and you can say about the type of content that you would like to be blocked and then you could go search I'm interested in open source and what do you get? You get all these different you fostered on for example, Mix, net and so on. The one that I think is pretty interesting that I just recently learned about is Hachydem Carol. I know that you're on there, right?
Absolutely.
And they have a great Nova, very seasoned open source contributor who's done tons of work in Kubernetes and other communities and they have a really open model, it's on GitHub, you know exactly what they're doing in terms of the community standards. And I started seeing friends of mine go there and I was like hey, they're doing it right from the start. And I think that's something that to me is really important. Like, hey, I know this is going to be about as safe an open space that one can get, easy to know how to contribute back to them financially, in code, whatever. And you know what the rules are and the direction is. And I couldn't be more happy to be part of that.
My favorite thing about this server, you can see it on Twitch. So Chris Nova streams on Twitch and in the background is a rack lit up and that rack is hachyderm sits in the basement. It's got a fiber optic cable plug coming into it. It's a real thing, right?
You can touch it.
Yeah, it's not in the cloud, it's on the ground actually.
It's in the basement.
This portion of Talk Python to me is brought to you by Microsoft for Startups Founders Hub, starting a business is hard. By some estimates, over 90% of startups will go out of business in just their first year. With that in mind, Microsoft for Startups set out to understand what startups need to be successful and to create a digital platform to help them overcome those challenges. Microsoft for startups founders. Hub was born. Founders Hub provides all founders at any stage with free resources to solve their startup challenges. The platform provides technology benefits, access to expert guidance and skilled resources, mentorship and networking connections, and much more. Unlike others in the industry, Microsoft for Startups Founders Hub doesn't require startups to be investorbacked or third party validated to participate. Founders Hub is truly open to all. So what do you get if you join them? You speed up your development with free access to GitHub and Microsoft cloud computing resources and the ability to unlock more credits over time. To help your startup innovate, Founders Hub is partnering with innovative companies like OpenAI.
A global leader in AI research and.
Development to provide exclusive benefits and discounts through Microsoft for startups Founders Hub. Becoming a founder is no longer about who you know. You have access to their mentorship network, giving you a pool of hundreds of mentors across a range of disciplines and areas like idea validation, fundraising, management and coaching, sales and marketing, as well as specific technical stress points. You'll be able to book a oneonone meeting with the mentors, many of whom are former founders themselves. Make your idea a reality today with a critical support you'll get from Founders Hub. To join the program, just visit talk python FM founder Hub all one word the links in your show notes. Thank you to Microsoft for supporting the show.
Yeah, so when you come to these different instances, you can use instance.social to search and then they each have this one. There's 6000 active participants, however many users, and it has a mission statement. And that matters because they can control.
Who can be on that instance.
If you don't like it, go somewhere else. When you have conversations, there's a way to say I want to see the conversations instead of happening, on all of twitter or all of mastodon on I just want it on the people who belong on this small group, no matter how many others there are. I think it's really neat.
It's tricky though. I think the biggest barrier to joining Mastodon is that the moment you join, you have to make that decision. And it's a really difficult decision to make if you don't know your way around.
I couldn't make the decision. I'm running my own instance. I'm paying a company before me because I didn't want to have to choose. I'm like, no, I'm interested in everything. I don't want to align myself with the free software people or these people.
I'm paralyzed by indecision. So yeah, so I ended up running my own server. It's cool that you can do that, but I feel like when you're trying to encourage people to mastodon, this is the thing people need the most help with this particular process because you're going in with no idea what makes a good server, but you have to pick before you can even start engaging with.
Yeah, it is tricky. Harley out in the audience says can someone invite me to the one where the Python peeps are on.
I'm not so sure you can get an invite. But Mastodon the free and open source software hackyderm.
I think there's five of us in this call and we have five different servers, right?
Almost.
Yeah, that's right, we are. Yeah. I think we're all on five different services, but we still talk and organize.
This through Mastodon, right?
Exactly.
That's a huge proof that the system works. In fact, I started on Foster On because it was, I don't know, more aligned with my interests at the time. But Fostern has some moderation policy at the moment that they don't allow nonenglish posts and sometimes I just went to toot in Spanish and so yeah, I went on and created my own instance and now I'm spreading my content everywhere in any language I like. But I think the moderation challenge is quite interesting and I'm looking forward to someone to set up like a graph of people in a sense like, okay, you can invite someone, but if that someone does something nasty, then I'm going to ban them and I'm going to ban you as a result. Got you someone to keep track of the social structure of the network so that there's mutual accountability. I think that would be super interesting. Yeah.
And these instances can ban other instances. Like for example, I haven't looked at hackyderm, but I know that Fosterdon is banning certain other instances for various reasons because it's spam or there's people who've done things that are unwelcome. So it's not just one person in Span, but like this whole community. We just don't want them to be part of it. Yeah, I'm not sure if that says it doesn't say there. Yeah, this one found racism and questionable other badness violation. Violation racism. One of these I saw just said Nazis. Like okay, that's clear. Obviously we are with that and then unlimited. Yeah. So I think this is really important. Right. Like this goes to choosing your homebase, right? Because it's more than just what hosts your content, it hosts your norms and morals and stuff.
Yeah.
I think it should be made easier for people to migrate to other instances because at the moment, for some technical reason, I don't know, you cannot migrate your posts. You can only migrate your followers and stuff. So if people can just move around freely, it's not that much of a big issue.
There's some nice articles about choosing your own instance. There's that app, I guess. One other thing, while we're kind of on the culture side, so I mean, you talked about the value of the algorithm and I agree with that. Acknowledging the filter bubble aspects of algorithms, there is some real value when you post messages here because there's no algorithm. It becomes like tailing a log of a super busy website, just stuff screaming by and it becomes really hard to just interact in the general stream of information. Mastodon has ways to say like, you reply, but it's not really a public reply. Sort of a semi. People can discover it, but it's not announced. And I asked people what is the right way in which to what's the default way to reply to somebody? And most people said, I'll just hit reply in public. And to me that seems like it's going to kind of overwhelm the system.
If every company believes replies in public will only get delivered to people who follow both you and the person you're applying to, though I think that's how that works. Okay, so am I wrong about that?
I think public goes into the public outbox of the local timeline, local server as well. And so it also ends up on Federated servers. So the general recommendation is for example, for bot accounts to always set them to unlisted so they don't spam timelines, but can still be found naturally through hashtags versions. For example, which by the way, I think I'm trying to do, full text version unlisted is the thing where it still pops up in your followers timelines automatically, but it doesn't pop up in the public timeline on your instance on the local one. So maybe we should say we have a local one which is just the stuff on your server and then we have the Federated timeline which is the stuff on your server plus anything and anyone that interacts with people on your server. So that is a bit complicated and I have not fully understood yet what exactly goes in there, but right, that is the two things.
I thought Federated was anyone who's followed by at least one of the users on your server, but it's not because on my personal server, just me stuff shows up in Federated that's not from people I'm following. There's no one else on my server. So yeah, it's complicated.
I think if you follow me and I boost someone else or like a post from someone else, that is maybe a better example.
If I like that in any way.
I interact with that and that also means it will show up on your server.
Even.
I read into the activity spec.
But yeah, the fact that we need to analyze it so much and we still don't fully understand it, for me it's a UX problem.
I don't know if it can solve, if it can be solved by technology. But no doubt it's a problem and no amount of parachute fairy tips is going to fix a UX problem. There has to be someone working on it.
I think sensible defaults would be nice.
Yeah, I set my default visibility to unlisted and I have to opt in the public on my world. So speaking of changes that might be coming in the UX thing, so I did want to point that Mastodon itself is open source, obviously. Juan and Simon, running your own, you're probably deeply familiar with this code over here and they just announced that they are about to release version 40. I don't know what great features that's going to include, but hopefully some of these things get a little bit ironed out as well. I don't know if you'll have any visibility into that.
So it's a very active open source project. You can see it's got 2.6 thousand issues, there's a lot of and it's been welcoming, it's got people working on it full time or at least one person working on it full time.
Again, the amount of impact they're having from a very tiny sort of team of contributors is truly extraordinary. But it does seem to be something where you can get very actively involved with it. There are also lots of interesting alternative versions out there. Andrew Godwin has spent the last two days hacking together his own custom Masterdon on Django thing, which I'm really excited about because his signature feature is going to be that it'll be easier to point custom domains to it. Right now you have to run a separate Mastodon for every custom domain that you want, which is very inefficient. This way you'll be able to run one of Andrew's things and have all of your friends with their own custom domains can still share the same instance. But yeah, I also get a feeling from looking at it that there are inefficiencies in the way that it works, which are basically because it hasn't needed to scale that much before now. The way it distributes posts using scikit and Ruby requests look fine two weeks ago, suddenly that's beginning to strain at the edges. But it means that if you want to help make this stuff more efficient, there are this is a great time to be getting involved in helping fix some of the UI things and improve some performance and there's just so much work to be done and so many available people to help do that. So I'm expecting some very healthy activity around all of these different open source projects to be coming up pretty soon.
I was going to say, because we're pulling in a bunch of different groups of people. I think the likelihood of getting more folks that are really into user experience in UI and how to run asynchronously things more efficiently, you wind up with these expertise coming into the ecosystem, which I think is going to continue to kind of energize it. At least that's my hope.
Well, we've got really good bones to build on, like all of the decisions made so far.
It's a very high quality product, it's a very high quality code base. It's not like it needs fixing.
No, not at all.
It will definitely benefit from more people able to help it take on these newer challenges that are emerging just as entire world leaps on it in one go. Yeah.
And I think it's sort of that you plug in user experience kind of side of things, where you're going to.
See the real grip and about the.
New things in Mastodon 4.0. Actually, if you go to the release notes. 40 Release Candidate One you can see that there's lots of new features that got added to some funds from the European Commission and then they're working on things like being able to translate posts or having more granular control on roles inside servers so that bigger instances can have any moderation roles that they want.
There's lots of exciting stuff coming for Mastodon in particular and I'm sure it's going to affect the whole failure as a whole.
A lot of new technologies being brought in here, this little scheduled background worker thing, we should maybe choose a different technology to make it go fast. So, I mean, you mentioned Andrew Godwin's.
Takahe, I think. Yeah.
In which language is words written? Is there any explanation of that? I'm curious.
I don't I was guessing Hawaii, but.
It seems like that to me too. But I don't know either, actually. Yeah, I don't know.
I mean, to me the bird evokes like fanning out their wings and the distributed.
I love New Zealand flightless birds generally. I might have to call minecraft though.
I do a lot of implementation just to keep Andrew's name and convention going. But yeah, Andrew developing this entirely in the open. I'm finding this useful because I have plans to do building my own code around this. I'm going to steal his implementation of like the Http signing and all of the difficult bits he's figuring out.
This looks very exciting.
Sure does.
Signing is actually fairly simple. The problem is how do you address anything that you're supposed to send out?
Yeah, I have a little pet project brewing now since the start of this year, or rather like the end of the last one, and that is actively focused. So I was also working on that stuff a bit in the background and it is a lot to take in, but it is fairly clever all in.
All, if you want to see how the stuff works. So I'm running my own instance. I'm playing Mastodon host to do all of the work, which is great, I don't have to figure out the docker containers and so forth. But when you have an instance of your own, you get access to the admin tunnel. And one of the things in there is the sidekick queue, which shows you what's been queued up to go out. And it turns out anytime you send a toot, it needs to be sent to every server that at least one of your followers is on. I've got like 5000 followers who have spread across 580 servers. So if I toot that's 580 deliveries that need to be made, which is on the one hand, that sounds like a pretty giant and intimidating amount of traffic. And if you watch, if I get into a conversation, send a bunch of tooths, my queue can grow to like 100 items and say like 20 or 30 minutes for it to fully drain through. But I started thinking about thinking, you know, what if I load a web page and open up the network pane? It makes 100 requests, right? Pages are pretty inefficient these days. So actually sending 600 requests because I tooted by modern web standards, that's not really an enormous amount of traffic. And this is why I feel like there's some low hanging proof here, just in terms of more efficient sending of these requests. This is where Andrew built using Python asynch Io implementation, which feels to me like the right kind of technology to apply here, but yeah, it's really interesting just having those little insights into what's going on under the hood. And this is not a lot more complicated than running a blog. If you're hosting your own blog, there aren't that many moving parts. You're hosting a mastodon server or an activity club server. There is a lot more activity that has to go on under the hood for all of this work.
Right here on GitHub, it's 66 requests to pull up a read me that we got something like that.
Right.
One thing I want to talk about, if we go over to the various profiles, I'll pull up my for just a second.
One of the things that's a little bit annoying here is if you search for yourself, you're going to find multiple ones of you.
Look, there's three of me.
And if I look for, like, JetBrains, there are many. None of these are real accounts.
They're all fake. Right.
And yet there's many Twitter, actually. Yeah, exactly.
If I search for Carol? There's only one Carol. Amazing. So good.
Yeah.
Thanks. You vowed in me now.
No.
Look, there's four Simons.
The reason I bring this up is you have to do a little bit of work not to pay $8 to get a blue verified sticker, but to establish your presence and show that you're a real person. So, for example, on my profile, I have one wellknown domain that's verified, and then it links over to Talk Python or Python Bytes. And those are both. If I were to go to them, they also have verified not paying money, but go through the protocol or the conventions and talk about that. Like, talk about this sort of creating a verified account here.
So I think it's a very smart technique. It's very similar to how you verify a site on Google Search, for example, you say, okay, so let's configure some DNS with a special record that only you know. And then when you do that, then Google knows that the site belongs to you. Right. And the way you go and do that here is that you go to these URLs that you control, and then you add a back link pointing to your mastodon profile, and somehow the system does this update for you, and those links appear as verified. And I think it's really interesting first, that you don't need any technical special thing, you don't need any blockchain or anything like that for it to work. Like, as long as you trust that Talk Python FM is by Michael Kennedy, then you can assume that fosstodon account is going to be properly verified. And at the same time, it sets a very good precedent for news outlets, for example, to create their own instance and say, look, we're going to verify our instance. And you know that anybody with an account here is either like a journalist of ours or it's us. Our official voice and so forth. So it provides a way of doing this distributed, inexpensive verification. And I think that's really interesting.
And there's no central authority that says we hereby confer upon you this checkmark right here's, the evidence I present that I am me or that Talk Python is Talk Python or whatever, and that gets verified and people can decide how much they trust that.
I used to have this because it's such an elegant solution. And it's so funny with Twitter verification being this complete trash fire for the past two weeks.
And then on Mastodon, it's like, oh no, you put a rel equals me link on your site back and you highlight the main and mastodon. And I think it's beautiful. I think it's a really clever trip. There are some interesting tricks with it. So like I've got a GitHub account GitHub will use relequals me only on the about URL field on your profile. And you only get one of those so you can link back to your account on GitHub and get a verified thing. But then I wanted that to point to my regular site, so I edited it back again, which actually breaks because my server knows that I'm verified because it happened to check while that link was there. But then other people's servers don't show that verification because they all check independently as they should. Right? Nobody should trust my server about the verified links. They all need to do their own little verification step. Also, when you look at the the Met activity queues, there's a whole lot of activity that's just checking these verified links from each server to make sure that but I do think it's a beautifully simple and elegant way of solving this problem.
And then of course, you can add like a blue check bar next to your name. Just right. Nobody prevents you from doing that. I actually did that.
I am very proud of you.
I don't know if I could pull it up like this.
That's server specific though.
Emojis, I think that doesn't work on mine, or at least I haven't seen it on accounts in mind yet, but it's okay.
Ax Wax out there says you can put it in the Location field and GitHub as well. Do you have an example of that? That would be great to see what you're talking about.
I can pull up I don't think.
You can put URLs in the YouTube chat. They will be filtered out.
Yes, you are filtered out.
It's probably the geographical location field maybe.
Your user location field and GitHub, maybe.
I just hope that GitHub will see the light about the importance of Mastodon verification and allow us to either add a Mastodon account there or just like more than one home page link with an equals me thing there. And I poke to him a bit, but so far, sadly, nothing. But I'll keep poking them.
There's an open issue about that or a conversation somewhere. Right.
I saw that the other day, but I didn't collect the URL.
Yeah, I think I'm on the internal slack.
And Xbox said, yes, the location field.
There's a couple of other things I want to follow up on here before we go. Gina, this one might be particularly relevant to you. He let me put this in. So apparently the German government has set up its own mastodon server. You probably know more than I do about this.
Yes, they created this social.bunty and more and more ministries and official places. What you see there in the screenshot system, the Bmeund, which is our Ministry of Inner Security and such. And then Data protection, freedom of information. My own county, as I just said, or rather my own state actually also is apparently now there the Hessian lantern. So, hey, cool. And, yeah, they started doing that around the time that Elon bought the thing. So two weeks ago or three weeks. I don't know. Maybe the server is older, but the influx of a ton of official accounts started something around that time. And what I also recently learned is that we have this international emergency broadcast thing that is not SMS based, but rather an app. I don't know how official that is, but there is also a server dedicated to just subscribing to the so called Mina notifications for your location so that you get a mastodon notification when there is some kind of emergency. Like, really bad weather or, I don't know, some bomb that was found from World War II again, which also happens all the time here.
And that is kind of neat that they integrated that. So I immediately followed my local.
A little terrifying, though, because that means Mastodon and a safety critical system. When my queue backs up for an hour, suddenly I'm getting nervous that these messages really do need to be delivered.
In real time as you're looking at the rubble warning, earthquake coming. Oh, wait, yes, but this is really cool.
I absolutely love this idea, and I think other governments should also consider this seriously. Now, two more areas. We're getting short on time. I want to make sure we focus on. First, a little bit of programmability. There's a thing called Toot and a python library, which you can program called Toot. So the Toot CLI, is that what it's called?
Yes, this is it.
And it's a mastodon in the terminal, right? Which is pretty interesting. But it has a python library. Has anyone done anything with this?
Not yet, no. I've been playing with the API directly because maston your local, your server has an Http API. It's super. It's a very clean, very well designed API. One of the things we can do is it's got a streaming API so you can hold open a connection to a URL. And every time a new toot comes in, it gets fed to your script. So I have a little script in the Gist, which I've just been to you in the private chat, which listens to my server and writes to a SQL ID database every time something happens. And then I can analyze it in data set and run SQL queries and so forth. This is going to be the basis.
So you're in Python stream PY and give it a database. That's the schema. And this is the whole thing. It's like 30 lines of code because all you have to do is stream against that fetty.significance on that API V1 streaming public and then every time a new line comes in, treat it is JSON right up the database. So when I talk about building my own algorithm, this is how I'm going to do it. I'm going to be sucking all of that data down into a little SQL database and then running sql here's against it. I was really impressed with how easy this was. Not that I don't even need an API key for this one. This is just a publicly available entry, but it has authenticated APIs for following and tweeting and all of that kind of stuff. This is very, very hackable. One thing I find it is quite so I built Twitter bots in the past and it always feels like you and they ask permission or ask forgiveness situation where you launch a bot and you're always crossing your fingers that somebody, the powers that bee might not go, no, that's a bad bot and turn it off for you. Mastodon on there are no you can run a bot on your own instance. If you misbehave, your worst that can happen to your instance will be defederated, which is bad. So don't do bad bots. But you can build a bot that does absolutely anything and especially if it only interacts with people who follow it, what's the harm, right? Nobody's going to get upset with your bot spamming people if people have to follow it to get alerts from it. But I think we're going to see so much innovation around bots on this platform because it's so easy and liberating to start writing these automations.
I checked out toot. If you look at the Pi listing, it just gives you a description and if you click on tell me the documentation, it takes you the documentation for the UI thing.
It's really not clear how to use it, but I ended up just doing basically what you said and I used toot create the OAuth registration and the access keys and all that. And then I just wrote some straight Python code using Httpx against the API. And now on my stream deck I have a little button I can press right here. Every time I want to announce that a live stream is starting, click that thing and off it goes. So programming like you said, it's pretty hackable.
This is just so cool.
Yeah, this is fun.
It's.
Really fun.
I'm looking for a data set plugin for this because I think that would be pretty darn cool. And congrats on five year anniversary too.
Thank you. Yeah, it was a project's birthday yesterday.
Now I want to do a plugin. I'm waiting for Andrew in TAGTech. I pronounced it correctly earlier and I've forgotten. I'm waiting for Andrew to solve all of the problems and I'm just going to copy and paste code after that build a plugin based on the things that he's already figured out. But yeah, I want data set to be able to both ingest from activity Pub and publish to activity public all by plugins. It feels like it would be a really natural fit. Definitely.
I guess maybe let's close this out with not that yet. I want to close this out. Talking about funding and how simon, you mentioned the business model.
I think it's so transparent. It's like there are no ads. This is volunteer run. It's volunteer money. If you can afford, you should pay. And I think we should all be paying $8 a month for this on principle. If we can afford to do so, I think that's the right amount to commit.
There's an instance called social Co for example, that works as an open collective project. So to become part of it you have to pay and it becomes a collective effort that way. And I think that's really interesting too.
That is very interesting. I only read this about the fosstodon. So look at your instance of interest, I suppose. And if you look at this they have a funding page over here and they actually have open numbers about how much it costs to run, how much scaling they've had to do recently. So it said two weeks ago we paid $100 a month and now we pay $1,000 a month and here's how much money so how much runway we have at this current rate. They also talked about how many users they had in here somewhere. It went from something like 2000 to 40,000 in a week, which is pretty interesting. But if you think about this, they need $1,000 to run this server and this infrastructure and they actually break it down by piece of infrastructure like CDN vs. Servers and you take 40,000 divided by 40,000. You know, that turns out to be like two cent a month to run this. We can have a world that's not infested with ad companies and algorithms that are trying to manipulate us to buy things or to vote this way or that way or to be angry about this cause or that cause for two month. That's insane, right? We should absolutely be doing this.
The old cliche is if something is free, if the product is free, then you are the product. You're the thing being sold. This is our chance to show that we understand that lesson. Right? This is right now we want to use the software we have the option to pay for it, we should pay for it and like I said, not everyone needs to pay for it. I like the $8 thing because if you can afford it then throw in that $8. People who can't afford it, we want them around anyway so let's cover the costs for them but yeah, I'm not worried about the financial sustainability of this thing.
If even a small minority do the right thing and pay for it I think it's going to be fine.
I think it makes good sense for the ones that want to be sustained long term to be very transparent with the finances. I know we did that with mybinder.org and that really helped either grant money or bringing on other Federated instances and I think it gives people like hey, you know, people are putting in their time as well as the financial resources I for one. Happy to pay for that. I would pay more than $8 a month just so that there's no ads in fact I do on certain services.
I think the other thing to maybe keep in mind is given how quickly it's growing and the fact that there are maintainers of mastodon itself, be kind to those maintainers as you want new features and things. Because having been on the other side of, oh, you don't have this. This was a stupid way of doing that. You know what? They made good decisions, those are the decisions they made and support them as they learn how to scale even more so don't forget that there's people behind.
The efforts just because they have more money than it costs to run at the current moment. Mike and I don't remember the other person who runs Fossil on and this goes for all the servers these people are taking a lot of their time. They said there's been so much of an influx 20 x growth in users and servers and so on it's been almost like a second fulltime job so I think we should consider how do we make it something that is not a tremendous unwanted burden for these people who put together these places for us. So it shouldn't just go well they need a thousand, they got a thousand, they're good. There should be something more than that.
To help them and we are technically minded people, we can volunteer our time. People like volunteering to help with moderation, volunteering to help with systems administration these are all things that we should be ready to do as well.
Yeah at the same time I think the technology will only improve Andrew Godwin just created Jungle asynchronous favour server in what, seven days? That's completely astonishing but the more technology evolves and I think it's happening now that the human problems are going to become more and more apparent and probably some instances will want to have full time operators or even part time and they will want I don't know, like marketing people, graphical design, communications. They will want to coordinate with other instances, they will want to fund progress in the activity, pub protocols, that it's more robust and more feature complete whatever. So the more money we pour into the ecosystem, I think it's going to be good. If there's good accountability of how this money is spent and so forth and if it's as cheap as two cent a person, let's just go for it.
Yeah, why not, right? They have patreon and also not just your entrance but instance, but massive on the bigger.org, also has a funding option. I for one think this is a really lovely place to be. I'm excited by what I found. I saw a lot of comments in the livestream here that people found the noise signal to noise ratio much higher over in Macedon. People felt very welcome there. The kindness was really apparent there. So I didn't end up here for the reason that I expected. As one pointed out, some Narcissistic guy went banged around on Twitter for all, tried to break it. We'll see how that turns out, but I'm really glad that I ended up here. So, yeah, it's very cool. Maybe we'll go top to bottom, sort of. Final thoughts on this, Carol?
I think it's a great alternative to having our ability to communicate. I hope somebody who knows it well writes a good onboarding experience. For those of us that are relatively new, it wasn't hard to get started, but there were a lot of decisions that maybe aren't quite apparent when you first approach.
Yeah, I think we will probably see some changes maybe here and there as more and more people go in there and need to first get into the way that we talk there, into the way how this all works, how the community roots are and all that. So I think there might be some bad things that will happen sooner or later, the bigger this stuff gets. But I think the community as a whole so far has shown that in theory, it should be ready for that and should be able to solve that. And big parts of how to solve these situations, issues are already built into the very protocol and into the very concept. So I have high hopes that this is here to stay. Yeah, it feels like Twitter back in 2009 or even, I don't know if anyone else still remembers this, but before there was Twitter I was on Identica, which also was something like Mastodon basically also Federated, if I remember correctly. I'm not 100% sure and so, yeah, it feels a bit like the internet used to feel and I really enjoy that as an old timer.
Yeah, so same as you, Michael. I'm so glad that the  fediverse and the mastodon community so far is so friendly in general. At the same time, I'm looking forward to having more conversations about what's next, what are the current challenges? What are the bottlenecks that are perhaps limiting adoptions of how are we prepared for the next influx of users? Like, I don't know, if Twitter collapses effectively next year, is the fediverse ready to take that amount of users in? Do we want that sort of thing? I think there's lots of questions to be asked, but at the same time, it feels so exciting that we're in a position to do that from a community perspective with distributed responsibility way of doing things.
Well, I'm not deleting my Twitter account just yet. I will keep it around just in case. But definitely I'm mastodon and feedbacks first. Now I really want to have all my favorite people, all my favorite projects tooting, from the feediverse, whatever instance they land on and get very excited about the future.
Yes, I completely agree with you. Thanks, Simon.
I've got a call to action for people, toot, about Nice Things, something I've been doing every day. I try and put out a message about one of my projects, which I do hash projects on, and I'm encouraging other people to do exactly the same thing, like celebrate things that we've built. If you click on Media, I try and post a wildlife photo every day as well, tank with wildlife photography because who doesn't want to see a photograph of pelican in their feed?
Does your dog have a mastodon feed?
Not yet, no. She hasn't moved everything to us yet. But she should do.
She's not upset yet. She's still just sticking with that group. She's not upset.
She's a bit old fashioned on that front. Yeah. But yeah. Host nice things, reply to people, get involved. One of the things that we're all enjoying about Mastodon is that people are nice to each other and talk about interesting things. So get on there and talk about interesting things and be nice to people. That's the best thing that we can be doing right now. Yeah, I love that.
Thank you, Simon, for the project hashtag, because I have had a blast reading through that and also participating in that.
Fantastic. It's really fun. Yeah, totally.
And I'll be sure to link to everybody's mastodon profile so you can follow all the guests, as I always do. But I think that's especially relevant now. Everyone's coming over. It's a little bit different to find folks and connect, but my experience is Mastodon is very active, very full of python, people who are friendly and excited to be there. And so it's a great place. It's not just a couple of people who are there. It's a great community and folks should check it out. Harold, Gina, Juan, Simon, it's been great to have you all here. Thank you so much for being part of this.
Thanks to you.
Thank you for helping us.
Thanks to you for the bite.
Thank you for having me.
Bet.
Bye bye.
This has been another episode of Talk python to me. Thank you to our sponsors. Be sure to check out what they're offering.
It really helps support the show.
Starting a business is hard. Microsoft for Startups Founders Hub provides all founders at any stage with free resources and connections to solve startup challenges. Apply for free today at Talkpython.FM/Founderhub AWS is the lead cloud for developers, but with over 250 services, it's an overwhelming set of choices as to where the AWS Insiders podcast comes in. Their job is to help you make sense of all those AWS options. Listen to an episode at talkpython.FM/awsinsiders want to level up your Python? We have one of the largest catalogs of Python video courses over at Talk python. Our content ranges from true beginners to deeply advanced topics like memory and async. And best of all, there's not a subscription in site. Check it out for yourself at training.talkpython.FM be sure to subscribe to the show. Open your favorite podcast app and search for Python. We should be right at the top. You can also find the itunes feed at /itunes, the GooglePlay feed at /Play, and the Direct RSS feed at /Rss on talkpython.FM.
We're live streaming most of our recordings these days. If you want to be part of the show and have your comments featured on the air, be sure to subscribe to our YouTube channel at talkpython.Fm/YouTube. This is your host, Michael Kennedy. Thanks so much for listening.
I really appreciate it.
Now get out there and write some Python code.
