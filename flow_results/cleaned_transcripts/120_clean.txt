Michael Kennedy: This week, we'll enter the world of stock markets, trades, hedge funds and more. You'll meet Yves Hilpisch who runs The Python Quants, where Python, open source, education and finance all intersect. This is Python and Finance on Talk Python To Me, Episode 120, recorded June 1, 2017. Welcome to Talk Python To Me a weekly podcast on Python, the language, the libraries, the ecosystem and the personalities. This is your host, Michael Kennedy. Follow me on Twitter, where I'm @mkennedy. Keep up with the show and listen to past episodes at talkpython.fm and follow the show on Twitter via @talkpython. This episode is brought to you by Linode and Rollbar. That's right. Welcome to Linode who has joined to Talk Python To Me as a major sponsor. Be sure to check out what both of them are offering during their segments. It really helps support the show. Hey everyone, Michael here. Great as always to have you listening to this episode. Before we talk with Yves, I want to share some news. Been a really long time coming, but I'm pretty excited about it. This week is the first time the Python for Entrepreneurs course is finished. It's officially 100% done, officially out and shipping. If you're interested, visit talkpython.fm/launch. We'll have a special discounted price for a couple, maybe one week or something like that, after this announcement. Then, the price will bump up so if you're thinking about taking the course, don't hesitate. You'll get a pretty big discount if you hurry. What's covered? Well, Python web development mode with Pyramid, SQLAlchemy, web design, Bootstrap, themes, Stripe, credit card processing, User Management, inbound/outbound email, growth hacking, deployment, SEO, way more than that. It's 19 hours of excellent Python web content, so if you're interested, be sure to check out talkpython.fm/launch. Now, let's chat with Yves about finance. Yves, welcome to Talk Python.
Yves Hilpisch: Thank you. Thank you for having me, Michael.
Michael Kennedy: It's great to have you on the show, and I'm really looking forward to learn about Python and Finance. In fact, it's been really fascinating just to do the research to find the questions and interesting things to talk to you about. I'm really looking forward to talking to you about Python, finance, Quants, all this kind of stuff. But, before we get into that, let's start with your story. How'd you get into programming and Python?
Yves Hilpisch: Well, it's kind of, at least for people that are my age, kind of a typical story. My first computer was a C64 Commodore. Back then, I was fascinated by programming already. It's a long time ago where I started doing BASIC. Back then also Assembler, you know? If you talk to younger people these days and you say that you've been doing Assembler on machine level, moving arounds bits and bytes, almost nobody can imagine anymore. But this is not actually how I--
Michael Kennedy: They might ask you, they might say, "Hey, is that the new JavaScript framework? I heard of that."
Yves Hilpisch: Yeah, something like that. But, I think the world has become well too complex .
Michael Kennedy: For sure. Yeah, you couldn't build very much in Assembler anymore.
Yves Hilpisch: No, but sometimes, I'm fascinated when I am walking through all across the shelves in bookstores and they still have Assembler books, like 1,200 pages just to do a simple arithmetic operation or what. It's still fascinating. Some people might still do it. I just met one guy, it was a Russian guy at the London meetup the other day. They said, "Well, I am doing Assembler." But, that's the one guy over the last maybe 10 years who told me that he will be doing Assembler.
Michael Kennedy: That's amazing.
Yves Hilpisch: But yeah, Python. Frankly, after my early programming experience, it more or less stuck because I decided to study business administration. I somehow thought that this will be the path to make money, decent money. Yeah, I mean, the fascination for technology never disappeared. After my business administration, it created what we call the Diplom-Kaufmann, which is kind of the equivalent of an MBA. I followed up with a PhD in math finance. This was actually the point where I got into finance. Back then, nobody can imagine, a few today, that I've written a kind of PhD thesis without any numerical analysis or programming even.
Michael Kennedy: Oh wow, so it was really theoretical. It was just the theory of finance, not, "Here, we're going to simulate something"?
Yves Hilpisch: Yeah, indeed. Today, you would probably call this view a kind of model of Quants that really work on new models, but if you have maybe a thousand Quants you have a look at maybe only 10 are still working as models really, you know. But, back then there was much more to discover still, so today more or less all people working in banks, hedge funds, or whatsoever, they're more or less concerned with the numerical side with the implementation of the usage of the models that are around, with a couple of improvements left and right, but I did really a theoretical PhD in mathematical finance and yeah a little bit of numerical analysis, but more or less by hand, just examples no coding at all. But, still I haven't answered the question how I got into Python because this was more or less by accident.
Michael Kennedy: Yeah, so this theory is not yet gotten you anywhere near Python.
Yves Hilpisch: Yeah, but the two things come together. It was a couple of years later when I was working as a management consultant for an IT company and I didn't do anything IT there, it was just on a strategic level, but people simply didn't stop talking about Python and how nice Python is and how efficient they are with Python and it seemed to be the best thing after sliced bread. I had to look at it, simply out of curiosity. There was no real kind of need for me or whatsoever, but I said, "Well, this sounds so interesting, "maybe there's something in it for finance." And, indeed, from the very beginning I was convinced, this is way more than 10 years ago, maybe 13 years, maybe 15 years ago, when I said, "This is something I would loved to have for when I did my PhD." This is so close to finance, to math, to all the formula, you can simply write stuff down and it looks not kind of a arcane code it looks still like math and mathematical finance and that's when I discovered Python and decided to start using it, more as a hobby in the beginning and it took us a couple of years and now I don't do anything else but.
Michael Kennedy: That sounds really great. Those were pretty early days and so, the tooling for computation in Python wasn't as good as it is today, right?
Yves Hilpisch: Sure, sure, sure. I mean, this is what most said back then and still some do today, kind of this is slow, this is in an interpreted language. If you have to write loops, which is kind of common of course in mathematical finance, everything is more or less about loops when you use a financial algorithm. And it was true, so back then we didn't even have NumPy, it was Numeric. We started using it, which later became NumPy, but we still started doing it because the syntax and everything and, from a research perspective, we had more or less back then, it wasn't that important whether it's one second or a 10 second thing or even sometimes one minute or 10 minute thing, maybe four people working in production of an institution, this is, of course, a decisive question, but for what I had in mind in the first place, it wasn't kind of really a thing. I just saw the efficiency gains that you could get from using a high level language like Python.
Michael Kennedy: I see, so in the beginning it was like, "I need to explore this data and if it takes a minute, that's totally fine." You weren't trying to do like high-frequency trading with it?
Yves Hilpisch: Yeah, sure, exactly.
Michael Kennedy: Yeah, I see. Okay, so you get what's close to your MBA and then you get a PhD in theoretical finance and then you play around with Python. What does that end up meaning for you today, what do you do day to day?
Yves Hilpisch: Yeah, today, I said it before, everything is under Python for Finance, we don't do anything else, of course, sometimes I say well we talk about Python, but it's more or less open source in finance, for what we do, we also use other open source technologies, but at the core of the core of what we do is Python, so all our offerings like the trainings, for example, they're centered around Python and finance, so we don't do, for example, any JavaScript training or nor do we do any Python training for another industry. It's really at the intersection of Python and finance is what we do and in these areas we do events like a conference or a bootcamp series, which is Code for Python Quants, and running a big meetup with 2,000 members in London called Python for Quant Finance. We make currently, mostly our living, off online training, and there, the focus is on Python for algorithmic trading, which has become kind of a rather popular topic.
Michael Kennedy: Yeah, definitely the algorithmic training has been.
Yves Hilpisch: Absolutely. Also, for retail analysis for single people, but for the big ones as well, so we have usually people attending our classes from the biggest institutions down to students who are just interested in this topic. The technological requirements to enter the field have become loads of the, so to say, barriers of entry as we say in business, almost have vanished, that everybody can start algorithmic trading with, let's say, $50 or $100 USD within an hour, so this is how far we have come.
Michael Kennedy: That's very far from the ivy league university degrees and master's degrees and whatnot, right?
Yves Hilpisch: Yeah, sure. Everybody can start.
Michael Kennedy: That's really great. So, you don't need too much mathematical background in statistics and training in sort of theoretical stuff to get started?
Yves Hilpisch: Well, it doesn't hurt. Let's put it that way, but many people even argue that a former background in finance might be hurting in the sense that you believe in the wrong paradigms.
Michael Kennedy: Right. You studied a world that no longer exists, maybe? Or, has changed a lot, yeah.
Yves Hilpisch: When I studied finance, and still people who study finance at university, the basic theory still is based off end of day data, back in the days when you had to look at the newspapers in order to pick out current stock prices, you know, this is more or less the data that all the theory is based on, but, today, when we talk about intraday, this was kind of the first step, you know, the day traders came out, they started trading intraday and now we have arrived at the high frequency trading space and, of course, things have changed, but, from my point of view, theory hasn't kept up really well.
Michael Kennedy: Sure. Almost the computational side probably has kept up closer than theory, right?
Yves Hilpisch: Yeah, sorry, because you need to have the capabilities to process the huge amounts of data. I mean, if you just have a look, if you have 30 years of data for a single stock price, this is kind of roughly 250 trading days per year times 10 is 2,500 times three is 7,500 end of day points for a single stock. If you have a look, for example, at Apple or what you, you easily get beyond 15,000 points per day when you work with the intraday data, so it's twice as much in a since day that is available now compared to kind of 30 years of end of day trading data, you know. That's changed quite a bit.
Michael Kennedy: So, the area that you focus on is the whole Quants. Could you maybe tell us what Quants are, give us the spectrum of different things, you said model Quants, computational Quants, other types of things, what's this landscape look like?
Yves Hilpisch: I mean, the expression Quant comes from a quantitative finance or quantitative analyst, so people that do anything that is somehow quantitative, are originally opposed to little bit like theoretical, you have numbers and then you work with numbers, but usually, I think, people understand that the Quants that people are working with models in the sense of they are implementing them, they analyze them, they tweak them, they optimize them, they write code based on them, and so forth. But, this maybe my point of view, if you ask 10 people in the industry, everybody might come up with a different definition of this regard. But, mostly people who have a formal education, a formal background, like in engineering and math and physics, they have the math tools available these days. Also, of course, the programming tools and they now do quantitative stuff and modeling in the financial industry and this can be from a to z, this can be in credit modeling, this can be in trading, this can be in option pricing, many people in this area work, or with the title, work in risk management, which are huge departments in the banks, so it's a diverse set, actually.
Michael Kennedy: Sure, yeah, it sounds like quite a large group, actually. The people that do high frequency trading and create the algorithms and code, would those be Quants?
Yves Hilpisch: I think you don't hear Quant in this context quite often, so there are more technologists from my point of view, so this complete high frequency space is more driven by the technology itself and not as much by the quantitative analysis, from my point of view. I would say, I would exclude it but, it's not the first area that comes to my mind.
Michael Kennedy: I see, right, of course. Okay, let's see, let's maybe start with the state of Python in the financial industry. So, 10 years ago it sounded to me like using Python was kind of like, "Hey, what are doing? Why are you using that language? You should be using Fortran or C, or something, or maybe Java. Something compiled and faster and more trusted, right."
Yves Hilpisch: This actually was the case. So, speed, especially in the area where you haven't had the nice hardware wave, as of today, so both, of course, on a single machine level as well as on cluster level, we have seen tremendous advances on the hardware side of things. Speed was more or less gained by implementing the models in the best fashion possible, which meant, of course, to have a compiled language and C++ has established itself like that as a standard and most of the pricing in the analytics libraries these days, still in use, are based on C++. So, they have millions and millions of code in C++ that do pricing work on a daily basis, risk management, front office pricing, and so forth. So, this is where we came from. And then, of course, if you have an expert who knows how to optimally combine, compile the C++ code, highly efficient men, even begin with parallelization and so forth and you come along and say, "Python? " The only thing they did was laugh at you, you know?
Michael Kennedy: Yeah.
Yves Hilpisch: But, of course everybody saw, for example, the benefits of having such an efficient language like on the system administration level and so forth, just to have to write scripts instead, using Bash or whatsoever. This was kind of the first area where Python was used back then.
Michael Kennedy: To kind of glue things together?
Yves Hilpisch: To glue things together, yes. Automate things and maybe even to orchestrate stuff that was written in C++ and other languages.
Michael Kennedy: Sure.
Yves Hilpisch: Still, it took a long while I must say, until we reached the point where we now have the big users, or even, I would say, the biggest financial institutions that are heavy users, strategic users of Python like Bank of America, Merrill Lynch and JPMorgan they have both implemented core systems based on Python.
Michael Kennedy: Yeah, it was pretty incredible at PyCon, were you at PyCon this year in the US, just a few weeks ago?
Yves Hilpisch: No.
Michael Kennedy: Saving it for Euro PyCon?
Yves Hilpisch: I used to. I used to attend the first Euro PyCons religiously, especially when they were in Florence, kind of a really nice place, but I even stopped going to them. The year is only that many months, weeks, and days and I focus more or less on the finance side of things these days, our own conferences. I'm traveling anyways, all year round.
Michael Kennedy: You're already running your own conferences. What was interesting about PyCon, which is really a technical developer-type conference, right, and really maybe data scientists as well these days, there were actually quite a few financial companies with booths, large expo booths and basically on display, and so, for example, JPMorgan Chase, Capital One, also Chase, there's number of companies where you're like, "Why do they have a booth here? What are they doing here, you know?" And, basically, they're like, "We need as many Python developers as we can get."
Yves Hilpisch: Sure, sure. That's what I was saying, it's not one piece of technology that is used in certain areas no, Python is at the core, at the core system. The core risk management training system at Bank of America is called Quartz and it's at Athena, JPMorgan and there are now hundreds, if not even thousands, of people writing Python code on a daily basis for these systems. So, they need talent, of course. They need talent in order to support, maintain and further develop that platform.
Michael Kennedy: It's really interesting. How many other projects at any company of any size have thousands of developers working in Python on a single project in a day, you know? Not many.
Yves Hilpisch: Not many, not many, actually. But, the banks have become technology companies anyways. They have thousands of developers, I heard somebody saying that Bank of America has more developers than Microsoft. I never followed up on that, but with a bank that has 300,000 people, you can imagine how many of them are doing technology these days and they have budgets, they have IT budgets in the billions, so the bigger ones beyond five billion per year for IT only. Huge technology companies.
Michael Kennedy: Yeah, another financial area that was using, or still does use, Python a lot is PayPal. They use Python for many, many things and they have one of their services that does real time pricing for transactions and exchanges, that's running on Python and doing several billion requests a day. It's really interesting to see this move from, "Oh that's not going to be fast enough, oh, you can't build real stuff with that," and so on, and now it's like at the center of some of these things.
Yves Hilpisch: Yeah, sure. I mean, sometimes when you reach a problem in a certain area, of course, you still have the option to use another technology and that's the beauty of it. If you go the Python route, it's not that you have only Python available, it's so easy to interface with C++, C code, other technologies in general that might be better suited for this particular task, so that Python is not a choice where you lose out on other things.
Michael Kennedy: Yeah, that's right.
Yves Hilpisch: The decision there is always a good one because it's really flexible.
Michael Kennedy: Or you could just even call web services, right? All those types of things.
Yves Hilpisch: Everything, everything. It's a general-purpose really flexible language and, talking about performance, we now have also many interesting native performance technologies available. Especially interesting for the finance part there, so it's not that you need to resort to other technologies in order to get the performance. We have, now, lots to offer in this regard as well.
Michael Kennedy: This portion of Talk Python To Me is brought to you by Linode. Are you looking for bullet-proof hosting that is fast, simple and incredibly affordable? Look past that book store and check out Linode at talkpython.fm/linode, that's Linode. Plans start at just five dollars a month for our dedicated server with a GB of RAM. They have 10 data centers across the globe, so no matter where you are, there's a data center near you. Whether you want to run your Python web app, host a private Git server, or even a file server, you'll get native SSDs on all the machines, a 40GB network, 24/7 friendly support, even on holidays and a seven day money back guarantee. Want a dedicated server for free for the next four months? Use the coupon code: Python17 at talkpython.fm/linode. Do you know some interesting stuff going on, are people using GPU clusters to try to make things fast? Or, anything you can talk about there?
Yves Hilpisch: Yeah, sure. This is around since they started using GPUs or general purpose GPUs ever since, but in the beginning there was kind of the major problem that the working memory was typically too small to do something significant. So, when you think, for example, of the Monte Carlo Simulation, which is the American method of choice in risk management, and for many others it takes tasks just to, for example, just to price a simple American option, now we're getting a little bit technical, by Monte Carlo Simulation there's regression involved and stuff like that, you might, for a single option, you might need, I don't know, from a gigabyte onwards, upwards of working memory. And when you think that banks like Morgan Stanley, they typically have three million open positions overnight, so you to value and revalue a thousand of times three million options, you know . This somehow illustrates what kind of the requirements are in terms of the hardware that you need, then GPUs are kind of nice for certain tasks, due to their massively parallel code that you can write, but other constraints like 32 bits and working memory have been issues. Now, we see, of course, that the GPUs are getting bigger, you get 12GB of RAM and so forth. I would say that this will further improve the stuff that you can implement, but everything I was aware of, of course, all the big banks and everybody was trying to figure out what the potential is of GPUs, but I haven't seen it deployed on a really large scale in the sense that people in the industry, the big banks and they're all still using regular clusters with regular CPUs and lots of memory and the stuff that you need in order to do our calculations there.
Michael Kennedy: Yeah, that's pretty interesting. And maybe the people who figured it out just don't talk about it . Which is possible, right?
Yves Hilpisch: Yeah, usually. I mean, the finance industry overall is kind of secretive in certain sense.
Michael Kennedy: Yeah, it's a little secretive, understandably like, "Hey, we found this amazing new algorithm where we make one percent on every trade that we do as a base line." Oh, yeah, tell us about that.
Yves Hilpisch: For sure, for sure. That's always what I say, if somebody finds it, they probably won't tell you.
Michael Kennedy: Yeah, exactly. But, I suspect that at some point, people will probably pull these in or, you know, maybe they just leap frog over them. Like the big news out of Google I/O and, theoretically, coming out of WWDC, vastly different scales, Google has come up with dedicated AI chips. Like, instead of using GPUs for this kind of stuff, they have now chips just for this kind of stuff.
Yves Hilpisch: Yeah, the TPUs, the Tensor Processing Units, exactly.
Michael Kennedy: Exactly. And Apple was supposed to be shipping an AI chip in the new phones, for example. Maybe at some point there will be just a dedicated chip that's not this general GPU, but is something even more focused.
Yves Hilpisch: Yeah, that's kind of it. I mean, it's the same thing in the blockchain space, GPUs were a work force for a certain period of time because much faster than the CPUs, but now they have the ASIC, application-specific integrated circuit chips and GPUs are gone, they're obsolete. You don't need that many more there.
Michael Kennedy: High transition technology. So, since you bring up the blockchain stuff, there's plenty more areas to cover, but what do you think about these cryptocurrencies?
Yves Hilpisch: I consider them really interesting in terms of technology and what is going on there, but maybe you're referring to recent developments and the explosion in the Bitcoin price, for example, so I see the market from an economic and financial point of view a little be over-hyped, but from a technological perspective, it's really interesting because it combines many technologies that have been around for quite a while they add new stuff to it and solve a couple of issues in very elegant ways, so I really enjoy it. I've given hours of webinars about it and I'm into it a little bit, but just a little bit, it's not at the core of what we do, but still I consider this finance part and you can do quite a bit and learn about it, in particular, based on Python.
Michael Kennedy: Yeah, for sure. There's also a lot of things that the finance industry seems to be trying to do with the blockchain, regardless of the cryptocurrency side of it.
Yves Hilpisch: Yeah, sure. This is what I referred to when I said, the blockchain space solves certain problems in a very elegant fashion. Property rights or settlement, for example, when you think of trading of financial instruments and documentation of property rights and things that have happened in an immutable way. In the end, the blockchain is nothing else than immutable database, it's very hard to taint it, so you talk about immutable database and to document property rights, also, for example, when you think of emerging markets in the world and so forth there is potential in there if this is enough potential to have Bitcoin now at $2,500 USD, I don't know, I tweeted about it and said the bubble is about to burst soon. But, then you read again that the big players are getting into the space, Fidelity recently revealed that they are in Bitcoin mining and that they will offer a bunch of cryptocurrency related services to the clients. And Fidelity is one of the biggest asset managers in the world, then you might say, "Well, of course, if these big players now start doing that stuff and getting into the space, of course there's a push."
Michael Kennedy: Yeah, there's definitely going to be a push. So, you're telling me it was a mistake for me to put my entire life savings into Bitcoin?
Yves Hilpisch: I mean, if you've put it in there at $100, and now you might think of an exit, this might be an excellent strategy.
Michael Kennedy: I only wish I had been so smart. All right, so, another thing I wanted to ask you about, you talked about these big users and these big projects and I know it's a little bit difficult for people to talk about what they're doing. In Python, in general, open source and shared libraries and sharing is a big thing, how does that look in finance?
Yves Hilpisch: Yeah, it's still an issue. So, when I give a talk, and sometimes in keynotes, and then I talk about the state of Python in finance, it's always this little spot where we say, "Well, we have many big users, we have many users that benefit, that make heavy use of the ecosystem in general, but they, at the same time, don't really contribute back." So, when I talk about the big banks, for example, just to make it concrete based on anecdote, when I run my events and I approach people working in banks, what they typically say, "Well, when is it?" And I'll say, "12 weeks from now." And then they say, "Well, then it might be impossible for me to speak because I won't get clearance for my slides within 12 weeks." And we are not talking about code, we are talking about somebody talking about what they are doing and not about the code itself. This is kind of this 100% policy in a sense that they don't get anything out of the doors, in a sense, what is developed here belongs to the banks people are not allowed to speak about it, people are, for sure, not allowed to open source something, and it is a big deal. You refer to the big financial institution trying to hire people at the conference, but they will have a hard time because many brilliant people in our ecosystem they really enjoy being there at the events, giving talks, sharing stuff, discussing things and so forth, but, at the bank, you hardly ever get the opportunity beyond something really abstract and really general. And this is done typically by the managing directors or whoever who's out for themselves that they go about it. On the other hand, we have then the people more or less exclusively in the hedge fund side that have implemented different cultures and policies there, so probably the most prominent and best example of this regard is AQR Capital Management. Pandas started out at AQR, Wes McKinney worked there as a Quant analyst.
Michael Kennedy: Oh wow, I didn't realize that origin, that's cool.
Yves Hilpisch: Yeah. When he worked there they tried something to solve their internal issues, they started early on using Python, but there was nothing comparable to the data frame in R and Wes McKinney said, "Let's implement something like the data frame from R to have easier times with time series management." And Pandas now is the big project, but only because AQR back then said, "This is not at the core, we benefit from it, obviously, so it's something we use on a daily basis, but we make money by generating alpha." Which means, they outperform the markets by earning returns. So, this is the core typically of a hedge fund, and they say, "Please open source it." The basic idea there, if you like the business case, about open sourcing it is to say, "If beyond our company may be a few hundred or someday, a few thousand, or, in the case of pandas, maybe few million people are using it on a daily basis, they contribute back to the project and we will have benefit as well." Because, again, pandas is not at the core figure of Capital Management, so they have the direct and indirect benefits of open sourcing it. Inconceivable for the bank world, due to compliance, legal reasons and so forth. Another good example is, for example, in London Man AHL, one of the bigger hedge funds, they, from my point of view, completely open up for their people, for their culture, they're hosting since, I don't know how many months, maybe it's already close to two years they're hosting the PyData meetup with monthly events of about 150 people.
Michael Kennedy: Wow, that's a big event, that's cool.
Yves Hilpisch: It's a big event and they are really proactive in this area. They have open source Arctic, which is tick data store, they also say, "We solved our issue. We needed a high performance tick data store." But, again, it's not at the core of AHL. They also money manager and money managing and creating, generating alpha is at the core of what they do and they open sourced it. I've had many speakers from AHL, sometimes even two, and then the CTO at the meetup and so forth, they come and talk about. They talk about the philosophy, the change from other languages, other platform technologies to Python and they know that in order to attract the most brilliant people, they need to open up and they need to embrace open source, not only as a technology, but also as a culture.
Michael Kennedy: It's really interesting to see how the hedge funds would operate differently. It seems like there's a lot more flexibility in whatever that company decides, that those are the rules that go for the hedge funds, whereas the big banks are very conservative.
Yves Hilpisch: Yes, they are, but this is driven by legal and compliance. If you have, I think of America, if you have hundreds of thousands of people employed, it's hard to make exceptions.
Michael Kennedy: Of course.
Yves Hilpisch: Because how do you go about exceptions? It's much easier to say 0% or 100%, so these policies are much easier to implement and if you have a hedge fund with, let's say, 200 people or whatsoever, you have a couple of people in the leadership team and it's much easier to say "Yes of course you can go out and talk about this and that, but make sure to not talk about x, y, z." This is much easier. But, if you have hundreds of thousands of people, it's so hard for who to decide what.
Michael Kennedy: And all the government regulations. Yeah, absolutely. It sounds really hard, actually. Then you said also there are individuals that come to your classes, that use Python and finance things, what kind of things would an individual be doing? Would this be like day traders or just one-off traders or what is this for?
Yves Hilpisch: This is my typical example. It all started out with day traders. So, back in the days, probably in the earlier 90's, it started out that you as an individual could rent at such a day trading farm I call them, trading desk with old technology that you need the data feeds and execution capabilities and start day trading. Not being employed by a bank or a big buy side company, you are nevertheless able to start trading on a daily basis, intraday, not by calling the broker in the morning and say they play at least buy 10 stocks from Apple, 20 from Amazon whatsoever, you could do it on your own. This was kind of the first wave and now, I said it before, with all the programmatic APIs offered by the online brokers and so forth, I can sit here, if you would have a webcast, and I would fire up my shell or my Jupyter notebook, I would fire up the trading thing and, within minutes, I would start trading and minutes later I would stop trading, so it has come to the desktop, to the notebooks, just need a current machine and a decent internet connection. That's all you need to get started in the space as of today.
Michael Kennedy: It's really fascinating to think of someone firing up a Jupyter notebook and trading from it, but it makes perfect sense. Hey everyone, Michael here. Let me take just a moment and thank one of our sponsors who makes this show possible. This portion of Talk Python To Me has been brought to you by Rollbar. One of the frustrating things about being a developer is dealing with errors. Relying on users to report errors, digging through old files trying to debug them, or a million alerts just flooding your inbox, and ruining your day. Will Rollbar's full stack air monitoring, you get the context, insight, and control you need to find and fix bugs faster. Adding the Rollbar Python SDK is just as easy as click, install Rollbar. You could start tracking production errors and appointments in eight minutes or less. Rollbar works with all the major languages and frameworks, including the Python ones like Django, Flask, Pyramid, as well as Ruby, .NET, Node, iOS and Android. You could integrate Rollbar into your existing workflow. Send error alerts to Slack or HipChat or automatically create new Jira issues, Pivotal Tracker issues and a lot more. They have a special offer for Talk Python To Me listeners. Visit talkpython.fm/rollbar, sign up and get the Bootstrap plan free for 90 days. That's 100,000 errors tracked for free, but, just between you and me, I hope you don't encounter that many errors. Give Rollbar a try today, just go to talkpython.fm/rollbar. I know for the high frequency traders like, "Wait and see." Network latency matters. They'll use a microwave connections instead of fiber because they can shave two milliseconds, it can get like a four millisecond ping time, so the six millisecond ping time. And they'll buy servers in data centers next to the exchanges and all sorts of crazy stuff. The individuals you're talking about is probably much more course grain trading than that, right? Not ultra high frequency trading, but just watching the market right.
Yves Hilpisch: Once again, what you're referring to, this is a game of a few, so the high rollers in those spaces, let's say. You need millions and millions of hardware just to get started in this space. And it's not what I would call really trading, it's, of course, called high frequency trading, but they more or less provide trading infrastructure in a sense that they are keeping up the market. It's not that some of these guys says, "Apple is a nice stock." They don't care about Apple or whether they will bring out iPhone 9 soon or 10 or 12, this is not their reasoning at all. What a typical trader's all about, "Well, I'm fascinated by Apple." I think that here and there, all these things going on. Or even by Quant analysis, let's have a look at the history and can we identify certain patterns, can I trade this pattern with the Apple stock or whatsoever. I think it's fair, they just provide markets, they're market makers. So, they trade, but for completely different reasons. They want to make money no matter what happens with the iPhone, no matter what historical patterns there have been or whatsoever.
Michael Kennedy: They're trying to capture a one cent change, not long-term. I think the price is going to double over the next five years or whatever, sure.
Yves Hilpisch: They don't care about anything that typical traders would care about.
Michael Kennedy: What are some of the other areas that Python shows up in finance?
Yves Hilpisch: You name it, these days .
Michael Kennedy: Yeah, pretty much.
Yves Hilpisch: If you have a look at my books, for example, it's in derivative analytics, so pricing and risk management and simulation, you can use it thanks to advances on the software side, as well as on the hardware side. Well too slow on a pure Python level can be implemented in a numerically efficient way and fast enough way today, so our library, for example, DX Analytics is a completely Monte Carlo Simulation-based pricing library. If you think about the others, from a computational point of view, the most demanding numerical method that you can have, so it's the most general one, but this comes at a price. It's computationally really demanding, but, nevertheless, with pure Python on a regular machine once again, you can implement that it's not that you cluster to do proper pricing there, not even for somehow bigger portfolios. The software and everything around that and then when I speak of typical regular hardwares of the day, we have come a long way, this is fast enough to do some decent stuff. Not for the big banks, with what I mentioned before the three million open positions that need to be re-evaluated thousands of times overnight, this is a different use case, but, again, you see it in principle in all areas, be it on the retail side where we are not involved typically, but on the Quant side in almost every area. It's the other way around and just thinking of spaces we're not, so you have thought of high frequency trading, I think this is one of the areas where you won't see that much Python because, for the million nanosecond, microsecond time scales, it's then still too slow no matter what performance technology you use.
Michael Kennedy: Right, when you joking about the assembly code, the one place I can see people still writing that is like a little in-line assembler in some C code in high frequency trading.
Yves Hilpisch: Yeah, sure . This is one way I use it. When we get to the hardware level, for my thinking, this is a hardware game, this high frequency space, more than a software or financial theory game or whatsoever.
Michael Kennedy: I want to dig into your Quant platform and your DX Analytics library, but maybe give us a broad view of the popular libraries. In computation, we have NumPy and Pandas, what does that look like in finance?
Yves Hilpisch: On the Quant platforms first thing you mentioned, back in the days where we started it's three years ago, thinking of the Quant platform, what we wanted to provide was an interactive financial analytics environment in the browser because, back then, our major work consisted of working with bigger companies, financial institutions and there was always the issue of deployment. Deployment in the sense that if you want to make use of Python, there are a couple of things that you need to install. You need the tool chain, you need certain packages, you need to keep them updated and consistent and all these things that we thought, "We have the web technologies available." And, frankly, we were not the only ones, but we focused on this Python side of things in financial area where we said, "Let's go about and provide something in the browser." And it has evolved to our central tool somehow in a sense that not only with currently close to 10,000 people registered on the platform and some of them is usual with regards to distribution, heavy users use on a daily basis, others just registered and are not using it at all. But, for example, our training, our students for the training programs, they find all the resources that we provide that they need on the platform. Thinking of training for us, it's the delivery mechanism where we not only provide static content, in a sense of text written there, little bit of code, sometimes picture slides and so forth, you can think of training stuff in a regular way. But, also the videos are provided there and the ability to execute it at the same time. If we provide there a Jupyter notebook, people just need to click and can watch the video and alongside the video on the same platform they execute the Python code that is shown in the video. It's a fully-integrated environment with all tools that you need for Python development and other languages as well. We have R and Julia codes running on the platform, but Python is our focus and I think this is why people come to the platform. It's the one thing on the one end, so to say.
Michael Kennedy: It's great. So, basically, if you have a browser, you can do a lot of this computational stuff with no setup at all, right? You can pick Python 2.7, Python 3, R, like you said, really nice.
Yves Hilpisch: Sure. We get this asked kind of regularly, what is special proprietary when I start using your platform? Is there a lock in? Can you only use your training material, for example, in the Quant platform? No, we just rely on open standards, so we are open, we try to live the open source culture. The Jupyter notebook team is fantastic, so why reinvent the wheel? I never understood. There are a couple of companies out there, once you get into finance, sometimes yes, sometimes not, they have developed their own platform Jupyter notebook equivalent. I don't see a point in that, it's a fantastic tool, it's a fantastic team who is behind that and we make use of that, so we adjusted it a little bit for our purposes and tried to tightly integrate it to the platform, what others do as well, it's also nothing unique about what we do. In this regard, we rely on the fantastic tools out there, but we curate it, we integrate it, as we provide our proprietary content at least there. But, if people decide, "No, I've followed along this course for, let's say, 12 weeks I want to do it on my own machine." Or on any other platform, it's the same thing. So, there's nothing proprietary. We even have this, this is what I always refer people to, we have this zip all thing, where it gets a, sometimes huge, zipfile of your accounts data and everything and you can download it and go away and close it down, so it's open and we don't charge for any accounts, there is no charge on the platform, it's more or less a service we provide to the community.
Michael Kennedy: That's really cool. Nice. Do you use like Docker internally to isolate things? Can you talk about that?
Yves Hilpisch: Actually not, from the beginning, we played around with it and we made intensive use of it, not of this particular instance, we decided against it and with the Jupyter hub functionality. Back where we started out, this is more or less the major reason we decided to build the platform from scratch, which meant, for us, from the Linux level user-based level, so all rights and rules and everything is dealt with on Linux level, but we don't use it to separate things because we share stuff with people working together on same content things and elements and so forth, sharing and working together. We decided that maybe today, with all the advances in this area as well, we would decide differently, but, when we started out, this was the choice we made. But still, this training that I'm giving today is about deployment and Docker will be a major part there. I'm fascinated.
Michael Kennedy: Yeah, Docker seems to show up in so many places, or containers anyway.
Yves Hilpisch: And for good reason, you know. To think of the new world, you can run a Linux operating system on a Windows machine .
Michael Kennedy: Cats and dogs living together, right.
Yves Hilpisch: It's the best thing about Docker .
Michael Kennedy: Yeah, nice. You talked a little bit about your DX Analytics library, do you want to talk a little bit more about it? Maybe, dig into it a bit.
Yves Hilpisch: This whole thing really financially and technically involved, so if you have nothing to do with derivatives pricing, there's probably nothing for you. This is the first thing, the cautionary notes, so to say. What we try with this library is to provide a, nevertheless, professional analytics library based on pure Python, so we don't make use of any fancy stuff in principle, it's more or less all about NumPy, Pandas, and the Monte processing library for primary processing and stuff like that. Nevertheless, we are able to do evaluation and the risk management for a complex portfolios of derivatives instruments. It's all based on American method, we can calculate, estimate all the creaks on a portfolio level on a single instrument level. And, again, this is really involved, but people from a finance base, they might know and grasp what I'm talking about. In the end, it has many users from around the world, but many not in the sense of millions, it's more maybe in the hundreds.
Michael Kennedy: Many as a percentage.
Yves Hilpisch: Yeah, many as a percentage, and it's even from I'm in regular touch with somebody from, for example, from the SEC, who is making heavy use of it, the American regulation authority there and other places. So, it's in use, but again this target is really, really niche, so when we talk about Python for finance, which is a niche, this is the niche of the niche, you know.
Michael Kennedy: Sure. Yeah, of course. But, it still is like 215 GitHub stars, that's pretty awesome. And what's interesting is you've got the DX, is that a package in there? Let me look. Yeah, it looks like a DX package. But then, also coming along with that, you've got a bunch of IPython notebooks, which is really interesting a way to share. Like, here's the package and some ways to explore it, right?
Yves Hilpisch: Yeah, sure. Sometimes, you know, you find on GitHub nice packages, but maybe then even a quick start installation thing, but then you are lost. We have written, I think, kind of a decent documentation and the documentation is based on Jupyter notebooks. I don't know, must be something like 13 or 14 Jupyter notebooks, lengthy ones, because the library is kind of powerful. Using Sphinx with the respective conversion operations, we've made other documentation for that.
Michael Kennedy: That is cool.
Yves Hilpisch: That's not that you get the static documentation, or PDF, you have the executable codes with all the text on Jupyter notebooks and it's the nicest way, from my point of view, to share that stuff these days, you know.
Michael Kennedy: Okay, so you're telling me at dx-analytics.com that set of documentation was generated from the IPython notebooks?
Yves Hilpisch: Yeah, sure. This whole thing.
Michael Kennedy: Oh, okay. Yeah, that's really awesome. How cool. That's great. I really do find that I have that same problem, I'll go to GitHub and be like, "Oh, this is such a great library." I was doing some OAuth 2 based stuff and I'm like, "This is really great, but wow how do I use it? I've almost got it, but there's a few more things I need to know and it doesn't seem to have it there. So, it's cool that you have it.
Yves Hilpisch: This is fantastic. I've even given, I think two times, talks about scientific toolchain, what you can do starting from Jupyter notebook and what results and documentation in this case you can get out of that. For example, my last book, Listed Volatility and Variance Derivatives, is what's written from the first sentence to the last one in Jupyter notebooks. It was converted to LaTeX and I handed in LaTeX to Wiley Finance and they took the LaTeX and published it.
Michael Kennedy: And they might not have even known that it came from Jupyter, right?
Yves Hilpisch: I told them, but most probably they didn't realize what it meant.
Michael Kennedy: They're probably like, "This guy's crazy, it doesn't come from space, I don't know what he's talking about. Here, take the LaTeX."
Yves Hilpisch: Something like that.
Michael Kennedy: Nice. So, some of the other stuff you got going on, you've got a bootcamp, is that right? Is this like a one day, one week, one month, like what does bootcamp mean?
Yves Hilpisch: Yeah, it ended two weeks ago, the last one. We do it twice a year, once in autumn in London and once in May in New York and we do four days, so this time it was from the eighth of May to the eleventh of May, in New York. Yeah, it's four days of intensive Python, we start with a very introductory day, so we have usually a couple of people that are starting out with Python and, for them, it's the first day and we have, on the second day, we cover let's say financial data science, we typically call it, so to work with NumPy, to work with panadas, time series management plotting, all that basic stuff, not too fancy in terms of data science. And day three and four are are centered around the algorithmic trading side of things. So, people coming to the bootcamp from day one, 9:00 a.m. in the morning, until Thursday afternoon, they are able then to algorithmically trade on a platform that we use to this end.
Michael Kennedy: Wow. That's a pretty high speed acceleration from zero to decent, but that's great, right? That also speaks to Python, like if you do this in C++, it probably wouldn't be possible.
Yves Hilpisch: It would be a four months to four year exercise.
Michael Kennedy: Exactly. And then you also run the Python for Quant Finance Meetup and that's in London?
Yves Hilpisch: That's in London, exactly. We've grown the group to 2,000 people. It started out some three years ago and we're still really active, we have close to 100 people per event and really grateful that Thomson Reuters is a strategic partner in this regard. They provide the venue and usually lots of drinks afterwards and it's really nice to see this group. It's also related to the cultural aspect that we discussed briefly that I find it fascinating that back in the days what you had was a network more or less composed of people that work or worked in the same company, or sometimes even only on the same floor, you know your colleagues the floor down, the floor up, you share lunch together and so forth, but today you have, via meetup movement, or these open social networks, you have the opportunity to talk to people from other areas, from other banks, even other industries, you can exchange ideas to see stuff that's going on in other industries, in other companies, when they're open and allowed to talk about it. And it's kind of fascinating, people always thank me. A couple of people had said, "I'm more or less the only one in my department, at my bank, who uses Python. I'm really enjoying to have the opportunity to exchange ideas and to talk to others who do the same stuff I do, but, in my bank, there are not that many people." All these stories, you know. Open social networks is kind of a nice movement that I really enjoy being a part of.
Michael Kennedy: I really enjoy it as well. I think it serves as a super important role and I think you're right there, there are a lot of people, whether it's finance, web development, mechanical engineering, whatever, where there's just one or two people that do Python or whatever it is that you're interested in and going to these meetups that lets you find your tribe and not just be that weird person in the corner that works in that language without curly braces.
Yves Hilpisch: Yeah, exactly. And you learn quite a bunch. Usually, I would say, it's high level talks, is not nonsense that's presented there, it's high level talks presented by experts in their fields and times are changing that fast that picking up a book, you can become to the realization that this is already a little bit dated and rusty. Here, you get the latest, the greatest, the cutting edge and even sometimes stuff that is not even out there, people talking about what they're working on and what might come out in the near future and say, "I was thinking of that and I'll have to tell my boss about this and that." All these kind of things that are going on there. Exchange of information, getting new ideas, seeing what's going on, so, steep learning curve.
Michael Kennedy: Yeah, it's really exciting and it's good to at least see some of the finance industry taking the open source vibe and using it internally, if not the huge banks, which I understand why. So, let me ask you, we're kind of getting near the end of the show, let me ask you one more question, then there's two questions I always ask at the end. The last one specifically I wanted to ask was about AI. AI and machine learning, this is something that it's felt like fusion, it's always 30 years in the future, right? No matter when you ask, it's way out in the future, even though it's definitely coming. But, I feel like the last two years, two or three years, things are really starting to unlock and machines are really starting to do a lot. We're getting self-driving cars, we're getting artificial intelligence that are better than radiologists at discovering cancer. What's it going to look like when that finally clicks into place for the financial industry? And has it yet?
Yves Hilpisch: Yeah, that's a good question. Indeed the question I'm currently really, really interested in. Just yesterday I finished another book on the singularity and in particular, the day before I gave my introductory webinar about the upcoming algorithmic trading certificate program, where I said there are two things. So, the one thing is that machine learning algorithmic trading are not too different actually, they are more or less, process-wise and from the approach, the same thing. You start out with data, algorithms, and hardware, in both cases, you then have this big step in between where you, at least in an algorithmic trading in finance, you have this optimization or you have training model, you have learning, you have deep learning, you do your testing, you do your validations, so this is the middle step. The third pillar then is in machine learning that you try to create predictions that are in line with reality, with the tastes of people or, to refer to your example, to have self-driving cars and to say, "Now it's time to turn left, now it's time to turn right." And it's all about automation in the end, you train these models not to have them sit around until just give answers when you ask them, it's about automating things. A self-driving car is supposed to drive, so to do it on its own. The same is true for algorithmic trading, third step there is to trade. And to algorithmically trade in general means to automatically trade. So, the two things are, from a conceptual point of view, more or less the same. It's the same approach, same thing, same algorithms these days that are used there. Maybe in finance we have a few others like rules of thumb, whatsoever. But, from this conceptual point of view, it's the same thing. It's the one area, not too different. The second thing is that I'm convinced that before we see the general singularity, the day when machines are taking over, in the sense that we will have a beyond human level intelligence and maybe even consciousness, built into a machine, we will see, let's say, a niche or specific singularities. Even if you Google this up, there is the expression of a financial singularity, which that means that the machines are making markets, are trading, and doing all the things and are much better. I sometimes use the example, when you read even papers from the 70's or whatsoever, research papers about models and so forth, they typically start with certain assumptions when they say, "Let's assume everybody acting in the market has complete information." This is a typical financial assumption, complete information. In a model context means that nothing is unknown, hidden, or whatsoever, you know. The market can go up and down, you know that it can go up and down. This is what is meant. Complete information in our age has changed dramatically. We will see machines, at least in the financial field, that will have something like complete information in a sense that they will have everything that is out there, that is relevant for a specific decision at hand. And, for sure, we all know that we human beings aren't really well suited to crunch gigabytes, terabytes, or petabytes of data to come up with an informed decision about that. I, myself, have started an internal research project, where I've picked out from one online platform, they provide historical data for free and, even with the demo accounts, you can get the historical data I have. And I finished this process on a cloud instance, I've collected all the data that they provide, back to, I don't know, 2001. Five second data for all the instruments traded there. This first step you see it's simple and with a few bucks only, you are able to collect all the financial data that is out there. If you say, "All the relevant data?" I would say I don't know, probably not, because there's news and there's other stuff, but at least it's all the data, it's tons of gigabytes of data that you can collect there. You have now the machines that are able to process this more or less in real time. First, I would say AI and machine deep learning, and all these nice technologies, have changed the place anyways, so it's not coming, it's there, that's the one thing. I see that before we see the general singularity in a sense that we have the big machine, as depicted in let's say, Terminator, or 2001, or whatsoever, there's so many science fiction movies which has the machine, the super human intelligence, AI doing things. We would see industry niche specific singularities and the financial place will be one of the first.
Michael Kennedy: The incentives are definitely there to get it right. It's going to be a wild world if that does come out, right? Now, it's maybe hard to understand why an algorithm does what it does, but when it's a super complicated AI, you won't know why it's trading, you'll just have to hope it's doing the right thing or continue to teach it. And then, you gave it this historical data, but as AI's get better at sentiment analysis of text speech, understanding visual, they could pull in all sorts of social data, all sorts of news data, real time CNBC, CNN, MSNBC, look at all these news channels coming and maybe capture a news event from the feed before it actually appears in the market, right? There's just amazing stuff there, yeah.
Yves Hilpisch: Sure, I'm a big fan of the show Person of Interest, where there whole background is the story is about such a machine, when they talk about there is this new machine coming up, it's called Samaritan, and when they talk about, "Do we give them access to the data streams?" Once you have the machine and the machine gets access to it, which is exactly what you're describing, then these things might happen and we have reached state where we can simply give access. A real world example, one of my partners, I mentioned them before in the context of the meetup, is Thomson Reuters and it just really is the beta version of a Python ripper for the new API and the new one, that's a multi-year project, that they've entered there, gives you programmatic access to the complete data universe of Thomson Reuters, which means all the historical data in structured form, as well as in unstructured form, which means news, blah, blah, blah, as well as just stock prices on a tick data level. And, to the real time feed, so the real time news, real time streaming data, and then on, and on. To be able to provide programmatic access, this is one thing that we have reached already. If you have the machine and you pluck them together, strange things, amazing things, good things, bad things, might happen.
Michael Kennedy: Many things. It's going to be an interesting time that we're going to live through, I'm sure.
Yves Hilpisch: Yeah, I'm excited about it, especially in this algorithmic trading field because, we talked about it, barriers of entry are low, and you have the real markets, you connect to the market. It's not like a physicist having pen and paper and thinking of the universe, you have the universe and you can play in the universe, you can fly your spaceship through it, just with your MacBook on your desktop and the internet connection. You are able to participate and test your ideas and to work with the data and to collect all the data and to see what's in there, it's fascinating.
Michael Kennedy: All right. That's very fascinating. Let's leave it there for the show, but I have two more questions for you before you get out of here. One, I think I can guess on this, looking at your getup repo, but if you're going to write some Python code, what's your favorite editor?
Yves Hilpisch: I'm using two. What I'm using most is Vim because I have it on every platform and it's really efficient. I even write my training material in Vim, so it's not only for coding, I also write in it. For a couple of reasons, but I also use it for certain things like, I don't know why but for web stuff, for an HTML, I exclusively using Sublime. I use the Sublime for many things, but it's now boiled down to a couple of certain things. But, Vim is my favorite these days.
Michael Kennedy: All right, cool. We now have over 100,000 packages on PyPI and what's one that people haven't hear of? Maybe something from the financial space that they should check out.
Yves Hilpisch: My favorite, when I refer other people to our industry, is Pandas, so I think Pandas has been a major breakthrough for our industry, this is the most classic package we have around to do finance stuff. I would pick this as my favorite one.
Michael Kennedy: All right, awesome. Definitely a good one. I didn't realize the finance origin, so that's cool to learn. All right, so final call to action. People want to get involved Python, or Finance for Python, and apply their Python skills to it, how do they get started?
Yves Hilpisch: It's a little bit self centered, but since we're working since 10 years, and even if you Google Python for Finance, you'd probably end up with 40 hits at the Google page out of 50 on the first page, pointing to our material. So, pick up a book. When I started out there was no book around, there are good ones available, not only mine. Go to my private webpage hilpisch.com, you'll find hundreds talks plus with Jupyter notebooks, with videos, with whatsoever. This is a study program in and of itself, I would assume. All for free, all the resources are for free.
Michael Kennedy: Yeah, actually, that's good point. There are a lot of videos on Youtube that you've done, a lot of conference talks, a lot of tutorials, so that's good place to get started for sure.
Yves Hilpisch: Yeah, sure. And usually during a talk it's not that you need to invest for weeks or months, it gives you a good overview and you can say, "Wow, this is something for me, so I go about it and look up the details." And, of course, we provide everything else that is needed, like online trainings, starting at very low prices, some stuff is even free, we have a free email course for Python for finance and many, many others. So, just visit our website and from there you find other resources to get started. It's actually our business to get people started and make people better in Python for finance and algorithmic trading, which is the main focus these days.
Michael Kennedy: Yeah, awesome. And if you're in London, check out the meetup, right?
Yves Hilpisch: Sure, sure. Come along, come along. We're planning the next one towards the end of June, we are already in June, so be sure to have signed up for our meetup group and you will receive information in due time.
Michael Kennedy: All right Yves, I'll be sure to put all those things in the show notes so people can find them. Thanks so much for sharing all your experience in Finance with Python.
Yves Hilpisch: Thanks for having me. It's great time, thank you.
Michael Kennedy: Yep, you bet, bye. This has been another episode of Talk Python To Me. This week's guest has been Yves Hilpisch and the episode's been sponsored by Linode and Rollbar. Thanks to them both for supporting the show. Linode is bulletproof hosting, for whatever you're building with Python. Get your four months free at talkpython.fm/linode, just use the code: Python17. Rollbar takes the pain our of errors. They give you the context insight you need to quickly locate and fix errors that might have gone unnoticed, until your users complain of course. Hence, Talk Python To Me listeners, track a ridiculous number of errors for free at rollbar.com/talkpythontome. Are you or a colleague trying to learn Python? Have you tried books and videos that just left you bored by covering topics point by point? Well, check out my online course Python Jumpstart by Building 10 Apps at talkpython.fm/course to experience a more engaging way to learn Python. And, if you're looking for something a little more advanced, try my Write Pythonic Code course at talkpython.fm/pythonic. Be sure to subscribe to the show, open your favorite Podcatcher and search for Python, we should be right at the top. You can also find iTunes feed at /iTunes, Google Play feed at /play, indirect RSS feed at /RSS on talkpython.fm. Our theme music is: Developers, Developers, Developers by Cory Smith who goes by Smixx. Cory just recently started selling his tracks on iTunes, so I recommend you check it out at talkpython.fm/music. You can browse his tracks he has for sale on iTunes and listen to the full length version of the theme song. This is your host, Michael Kennedy. Thanks so much for listening, I really appreciate it. Smixx, let's get out of here.
