People often ask me how they can find a Python community to be part of maybe a discussion forum or a Slack channel. This week, we look at one of the most active communities, Python Discord. It's Python on a Discord server. But much more than that to you'll meet Leon santoy, who along with the team of folks runs Python, Discord. Join us on this episode of talk Python to me, number 305. Recorded February 17 2021.
Thank you. Thanks for having me on. Yeah,
it's great to have you on. You're doing such interesting work in the community. And I'm excited to just give you a chance to share the what you're doing with the world. That's cool. What's going on over at Python discord and it's a lot bigger than I think people realize.
Yeah, it's really take specially the last year it's completely taken off. It's quadrupled in size over the last year. Wow. And that's it's a we have 150,000 users now 100 members of staff, and we're involved in all sorts of conferences and helping out in the ecosystem. Overall, I think it's, it's starting to become a big deal. I'm really excited to be part of it.
Yeah, I would say that's fantastic. Now, before we get into the main topic, let's hear a little bit about you and your background. Yeah, how'd you get into programming in Python?
It's an interesting story. I when I was six, my grandpa bought me my first computer and he was like a an autodidact. He like he was an engineer, like a petroleum engineer. And he learned all sorts of stuff on his own time. And he wanted me to get into computers. And I started learning a little bit. But I never picked up programming. Because the consensus in the community where I grew up was like that programming was this thing that you needed academics to do. Yeah, that education, you needed that university background, whatever. Like it was math. See, it was complicated. It's not something that a young person could do. And growing up in the 90s. That was a little bit more true than than it is now. But it still wasn't true. And I went a different way. And I ended up in music. I started studying music when I was a little older. And again, I gave up on my dreams of like being a computer engineer, even dropped out of school never finished my education wanted to be a full time musician that didn't work out. Turns out, not very well paid. And you'd really have to kind of
get lucky to Yeah, it's a tough one. Right? It's fantastic if you can make it but yeah, it's it's not easy.
I'll give it a good try. I learned a lot. Yeah. But ultimately, I went back to like 'IT'. I did like guess a customer support. I did like operation stuff like that. And my my sweetheart, my love. She got me this book. This was like 14 years ago, as almost like a joke for my birthday. She got me a 'C++' book. Like I don't know what to get you but you like computers, right? And I sort of had this reaction like, you don't know what you've done. Like, this isn't for me. I don't I can't do anything with this. This is for people who have the academics, all these preconceptions flared up. Yeah, I just felt like it was stupid. But she insisted I give it a try. And I read this book on the plane, right? And it was like simultaneously an epiphany that like, holy shit. I can actually do this. I like this. This is logical. And at the same time, I was pissed. Because I felt like my whole life. People had been lying to me saying that I couldn't do this. And that I had like, disregarded it that I'm starting. I was 21. It could have started 10 years before that.
Yeah, I've been wasting my time because I had this misconception, right. I think
a lot of people labor under that misconception that like the programming is something that you can't easily like that's something that people do after a university degree or whatever. That's just really not the case. Especially today.
Yeah. Especially today. There's so many resources, like you talked about getting a book in the 90s. I got it. Remember what my 'C++' book I got in the 90s. But it was fantastic. But it was just a book. And if you got stuck, well, you read the chapter again. Right on I mean, and that was it. Right? It was like really hard. Now there's YouTube, there's online courses, video courses, there's communities like Python discord, the support that is there as much to all this stuff that you're talking about. It's more true now than ever.
Yes, exactly. And my involvement in Python discord, I'm trying to be part of letting people understand that that's true. Like being that support system to help people get into programming, even though they're young and inexperienced, that it is possible. You can come hang out with us, we can help you get into Python, learn how to take your first steps into development. I think that's important. Because I yeah, I'm a little upset that that wasn't that I didn't take that path earlier.
I didn't have quite the same experience. But I had a similar experience where I thought oh, this is interesting. I would be cool, but it's there's no way I can do that.
Yeah, but wouldn't Start,
I started doing c++ programming in my senior year in college for a research project because I'd kind of been good with computers, but I didn't really consider myself a programmer. So I just, you know, I pursued other things like science and whatnot and math and, and I just finally got into it. And I, the thing that really made me realize like, this is something I really like is I remember working on these research projects, and it was a math research project, but also acquired a lot of visualization and programming. And I'd be really excited when I'm doing the programming part. Then I had to get some programming math, I had to solve some of the math problems in code Am I call this part is kind of boring. Okay, back to the program. Yeah. Wait a minute. The part that I'm supposed to be here for is the part I like Lisa, the programming is just super awesome. Yeah. So later as well. But yeah, it's better late than never.
Yeah, that's sort of my story as well. Like, when I picked up I didn't really like 'C++'. I learned 'C' I didn't really like that either. I got a little bit into like game programming. I looked at 'C#', later 'C Unity'. And none of it really clicked with me. But when I found Python, it was like, you know, Angel chorus, like, finally I found my home. It was like the wool being lifted off my eyes. Like I found my thing. And I started putting it in every facet, every corner of my life, like I was working in. I was an 'OP's engineer at the time working for an ISP. And I just started automating all of the boring stuff. I was like,
yeah, XLS Doc, it's so much joy out of that, because it's those things that just grind on you every day. And then you're like, wait a minute, that can happen instantly and automatically
I can go away. And then after doing that for a couple years, I realized that I was having way more fun than writing the code, then I wasn't doing anything else in my job. And I needed to just like pivot. Yeah, but it's hard when you don't have that any education, no real experience to find that first job. I applied like 50 places, I think before someone really gave me a chance. And they only gave me a chance because they were like, Yeah, but we'll give you a tough technical interview will be like several stages, you'll have to write a whole project and send it into us. This will take a week like to finish. But I got through it. And they were impressed. And they gave me a chance. And once you get that first job, at least here in Norway, where I'm situated, they basically throw jobs at you if you have a couple of years experience. I think that's pretty true. In general, I
think it's true in the US as well, where that first step is such a big one. But if you can get into the industry, and I go, you know what you're doing, then there's all these opportunities open up. So I think anyone who's out there listening who feels frustrated, like Oh, it's so hard to get that first job like that is the hardest career step you're ever going to make. Right? Because after that, it's just it's so much smoother and and easier.
I think, especially for people who are in other jobs, and they're looking to like change into development. It's tough. But once once you have that foot in the door, it's it's amazing. Like I could pretty much change jobs today, if I wanted to do any number of other things.
Yeah, absolutely.
But what I want because I love my job.
Yeah, so what the other question I always got asked at the beginning the show, because it's really interesting to hear the perspective that people are coming from Yeah, you know, are you a DevOps person? Are you a scientist? Are you a web developer?
So you're what what do you do these days? So I'm working for a company called 'Dignio', and we're a med tech company focused on remote care is the technical term for it. So essentially, we're the pitches, did you know that hospitals and governments in general spend like a significant amount of their budget dealing with chronically ill patients who make up a minority of the actual patients who are being treated? So we're spending like most of our money on the fewest of the people, it's like, the last one year of life is so expensive compared to the prior, you know, and minus one. Yeah. And then you have this shift going on in certain countries where like, the age groups are shifting, so there are more older people, and you need way more elder care. And it's expensive, because the elderly often have chronic diseases. And again, that takes up an enormous amount of resources. So the main thing is, they keep having to go to doctors, they have to go to hospitals to get like simple checkups and measurements. And so our solution is that they should do that from home. They shouldn't have to constantly be traveling around to two places to to like get their blood pressure measured, or whatever, we can do that via Bluetooth and an app. Yeah. And then you can just deliver all of the metrics to the doctor, and they can contact them if something changes if it looks bad, right, like so that they get the treatment when they needed, but they don't have to constantly be wasting their own time. And the well the government's resources, essentially on taking the bus for four hours to get to the nearest whatever, stupid. So we're trying to solve that. Yeah, that's
fantastic.
And right now we're part of the COVID-19 thing. I mean, remote care plays a big role there. We want to keep people out of hospitals, obviously, and prevent infection from spreading. So having them you know, they're doing their measurements at home, they're reporting their symptoms and taking their own temperature measurements and stuff like that. And then the the COVID 19, teams can just monitor them remotely. We're working with the NHS in the UK. We're working here in Norway with the Capitol. And with a bunch of hospitals, we're trying to get deeper into China. It's really exciting work. And I think that, you know, like, ultimately it's it's important work. It makes me sleep well at night.
Yeah. But to legitimately helping people, right? Yeah, right. I think
ultimately, we're going to save lives. Like, at some point, you inevitably save a life because you're helping relieve pressure from these, like important these critical systems. And maybe that's especially true during a pandemic, you have to, like, keep the capacity open at hospitals, and so on, like, so anything you can do,
I often think about what changes are going to stick after the pandemic is over or reduced? And what's just going to go back to normal, right? I think that that kind of remote care stuff is going to stick. I think it's going to be one of the things like why didn't we just do this before? Right? You really don't need to come in to say, Are you still feeling fine? Yeah, I'm feeling fine. Here's my measurements that my wearable has been collecting. Yeah, it looks like you're fine, right.
And we've been around for 10 years, like remote care has been around since the early 2010s. But it's like, as soon as the pandemic hit, it exploded. You've seen companies like assume, and all of these people who specialize in having your doctor checkup remotely, they're exploding, they're being propelled 5,10 years into the future, in terms of like growth and opportunity. And yeah, that's not going to go away after the pandemic calms down. We're here to stay now. And I know firsthand that municipalities and governments are buying in not just like temporary relief for COVID-19, but more permanent solutions for for remote care and monitoring. So this is definitely one of the changes we're gonna see, I think, stick around. Yeah, and pythons
powering some of that
pythons powering most of that our whole back end is Python 'Flask'. Our infrastructure as code is mostly in Python, and also a lot of terraform. I've been involved across the whole stack. We also use Angular for our front end, we have 'Swift' and Android and 'Kotlin'. There's so there's a big stack, but Python is at its heart running the back end that talks to all of the different platforms that their services use.
Oh, yeah, very nice. Yeah. Sounds like a fun Play Store. I was just gonna say before we move on to the main topic, though, there is one other thing that I think you are quite notable for in the recent days.
Yeah, I know what you're gonna say. Yeah. Yeah. So
you did this beautiful song called the 'PEP 8' song. And look at that. It's almost got 30,000 views on YouTube, which is pretty amazing. I'll put the link into the live stream for people to check out. But yeah, what was the inspiration behind that? That was really well received? Yeah. So it was a team effort, right?
That was a team effort. One of my admins, Daniel brown came to me with an idea. He said, you know, wouldn't it be funny if we did a version of Mad World but instead of saying mad world using pap eight, and the whole song is just about, they just gave me the idea. And it was beautiful. I was like, Yes, we need to do it immediately. I just got started. Yeah, I got some people involved in helping out, finish everything up. And my my sweetheart film that. So it was, it was great. We have an outreach team with python discord with Sebastiaan Seth in the lead, and he helped sort of like, get it out there. And I think we really managed to somehow get it out there. I mean, this could have been a thing that nobody ever saw. But somehow it broke through. Yeah,
yeah. There's probably a lot of great stuff that got created and posted and like went nowhere, right? Yeah,
for sure. No, this was fun. I can't really take much credit, because it's just the cover of an existing song. But I've been making music since since I was a teenager. You know, like I said, I tried to be a musician. So I cherish every occasion, I get to actually sit down and make something fun and like, especially when you can share it with a community and they like it. So most of the music I write, nobody will ever hear. Yeah, it's very few people. So this is just yeah, it's been really fun.
Yeah, if you haven't heard the song, I'll put the link in the show notes. People should definitely check it out. Because it's, it's all about the you know, don't use tracks that pass. Here's what you do with comments, all this stuff that you learn about in 'PEP 8' to write good Python code, but musical form, isn't it bizarre? How much music like connects with your memory? Like, like my daughters, when they were younger, they would sing songs, they would know every word. There was this biology teacher who wrapped the energy cycle of the cell like mitochondria and all that, like she would study for biology by just listening to the rap about mitochondria. You've got Hamilton the musical, which so many people listen to and learn about, like detailed American history, which they would think was so boring, but then it's in music form. So they now love it. Right? That's weird, right?
Animaniacs song with all the states and the periodic table thing that was right. All of these are examples of Yeah, it's a it's a vehicle for learning. And I think it actually works. I love the 'PEP8'. It's really dear to my heart. It's one of these documents. I think that like it's so perfectly explained sort of the culture of Python, and it's well written, it's easy to read, you should all read it to not just like, listen to the song, you should go read the pep eight. If you haven't read it. It's very, very edible.
Yeah, it's like the operating instructions for Python code. This portion of talk Python to me is sponsored by 'Linode'. Simplify your infrastructure and cut your cloud bills in half with 'Linode's Linux virtual machines, develop, deploy and scale your modern applications faster and easier. Whether you're developing a personal project or managing large workloads you deserve simple, affordable and accessible cloud computing solutions. As listeners of talk Python to me, you'll get a $100 free credit. You can find all the details at 'talk python.fm/linode'. 'Linode' has data centers around the world with the same simple and consistent pricing regardless of location, just choose the data center that's nearest to your users, you also receive 24/7, 365 human support with no tears or handoffs, regardless of your plan size. You can choose shared and dedicated compute instances. Or you can use your $100 in credit on s3, compatible object storage, managed Kubernetes clusters, and more. If it runs on Linux, it runs on the Linode, visit 'talk python.fm/linode' or click the link in your show notes. Then click that create free account button to get started. The main thing that we're here to talk about today is Python Discord. That's right. So discord is something kind of like Slack, but more focused on the gaming community traditionally, when you tell people what discord is real quick, and then Python discord, yeah,
so they started out as a sort of competitor for stuff like Teamspeak. And yet they want it to be that gaming platform. But then they've sort of pivoted because they've attracted communities that are way outside of that core market. And now recently, they've rebranded to being just like a place for people to have good conversations like that local community feel like you have a sewing club or your local swim team get a discord and really is a solid platform. They have very high quality video conversations and every feature that slack has, and then some
Yeah, what I really like is you can just go in there and you could be chatting in a room or you could just say, click a button and like let's make this a video call. And then it is right, right, it's really easy to sort of jump through the different mediums of communication there.
But I think the thing that they nailed that's like isn't, I mean, slack is really intended for these, like small corporate teams, so that you can have your own space, whereas discord is more for like open communities, right? So they want more people to join in. So it's it's got this discoverability aspect, you can grow your community as big as you want on slack that technically, after you have a certain amount of messages, they tell you well, now you have to like pay to unlock the content in this channel. And that's not suitable if you have 100,000 people in the community and they're charging eight bucks ahead, like it doesn't work. So slack is great for your work chat. But it's not really suitable for a massive community like Python Discord. So it's a really, really great place for that a lot of tech platforms have moved to discord as well. You have the reactive flux people that's a massive server palettes projects that people have made the flask and click there on discord as well. Many of the game frameworks like 'Piglet' and 'Pygame' was there up until recently, I think they may have disbanded that server but but yeah, there's a lot of tech there happening. Great communities.
Yeah, another thing that you talked about that's really interesting here is there's a whole way to program it with Python that allows you to sort of make it better like bots and other things, right?
That's right, it's quite accessible to Python through this framework called the 'Discord.py'. So it's made by this guy called Danny, and it's fairly easy to work with, it's fully 'Asynchronous'. So in that sense, it's a little high level, you have to understand the 'Async' 'Await' syntax. Not everyone learns that the first day of Python, but once you get there, it's it's very nice. It uses a lot of uses type annotations and a clever way to convert the input that you send to the bot to something useful, like a user or a channel. It uses lots of decorators. So it's actually quite a beautiful solution to that problem. And you can make very, very scalable bots that can be on 1000s of communities at the same time interacting with like millions of users without it falling apart.
Yeah, yeah, very cool. Joe banks out there, and the live stream says at Python, discord, we'd hit the slack limit of around 1000. Sorry, 10,000 messages in less than 10 hours. Yeah. That's not a great long term solution. Is it?
No one worked for us. Joe banks, of course, being one of the CO owners of Python. Discord. Yeah. Fantastic, along with Sebastiaan stuff.
Yeah, very cool. So how did this get started? Tell us about the community.
About four years ago, I met Joe in this community at that time, it had 200 users. And it was a very different place. It wasn't like nobody there really took it seriously. It was just a small server of people who were into Python. But then I guess, there were a couple of us who started really seeing the potential that this had to be a great place to learn and to teach. And I've always believed that teaching is a fantastic way for me to cement my skills to improve my own skills. So I've always like, tried to spend a lot of time teaching and tutoring, because I thought it made me a better programmer as well. And you know, like, it's a nice wholesome thing. I totally agree. I think it does. And I'm kind of sold that to a lot of more experienced users, like you should spend your time here, because it's going to make you a better developer. And because it's a nice thing to do. And we started getting more and more of those people who were into that culture. I think, at that time, I felt like I wanted to create something that was in opposition to my experience in the 90s. I spent a lot of time on IRC, and IRC was not a nice place. It was very toxic. Yeah, generally, if you ask the question, you were told it was a stupid question. And you shouldn't have asked it. And you were just sort of expected to know everything. And I think that people, you know, young people coming into that meeting that kind of toxicity on their first day, they could be discouraged from ever trying it seriously. So I think it's important to have a community where you're welcomed with open arms were like, we encourage stupid questions and hold your hand through them. Right.
Yeah. And that's one of the things you said you're really trying to curate their Python discord is having a welcoming place for beginners, right? Yes,
we've curated that with, I should say, extreme prejudice. So like, we've been extremely harsh and getting rid of any kind of toxic element. And just like rooting out anything that didn't fit into our idea of the culture of the culture is wholesomeness, like full blast wholesomeness. And we just want to be the nicest little community on on the internet, where we're, nobody's allowed to say anything mean or disrespectful, because that's just yeah, doesn't have any place in like your first impressions of learning to code. I think that should be a nice and warm experience. It's harder now that we're so big, but like, back then it was easy. I could read every single message that was posted into the community, I could personally moderate everything that happened. And I did that for a long while. But then as we grew bigger, we had to sort of build a set of staff members who agreed with with our cultural values, our core values. And so and we started really growing because we were, it was important just to reach out to more people, I guess. And we really believed in what we were doing. So we were doing creative stuff. Like we looked for partnerships with other types of communities. We even found a different Python community that were roughly the same size as us. And then I had a meeting with them and convinced them to merge with us, which isn't really a feature and discord. So what we actually did was we just mothballed the other community, removed every channel left a link to ours, tried to like funnel all of their users into our community. Right, right. If you come here and you find it empty, yeah, where everyone's gone. Yeah. And then we took their staff members and invited them into our stuff. Some of them are still there. Some of them are fantastic. Actually, the one of the owners Sebastiaan came from there. And then yeah, so so we've done that we partnered with the 'subreddits', our Python quite early, got in touch with Andrew Phoenix over there, who runs the show, and got involved there. And I think we got a lot of traffic via Reddit, we had some pretty good SEO, Search Engine Optimization
'Reddit'. It's really interesting, right? There's a lot of cool stuff happening with Python on Reddit. But also Reddit can be a little bit harsh, like the people there can be a little bit rough. Yeah, for various reasons. So it's a bit of a mixed bag. You got to be careful, right?
It do. But I think the thing that happens, though, when we were when people found us through really through just googling us, but they would Google not specifically for us, they would Google Python discord, thinking, Hey, what's you know, like, Is there a discord for Python, but we decided, hey, you know, what would be good if we just double down on that and use that as our name, get the domain 'pythondiscord.com' put it everywhere. Like if we are Python discord, then that's the thing people Google, they're gonna find us. And that really worked. I think it was a sort of a creative way to get our names up there. So yeah, we started really attracting people. And then we just kept partnering up with people, we got listed on 'python.org/community',
there's a couple of people on the livestream comments on the community thing. So Robert Robinson says a community is the best thing for beginners to advanced developers, through us says there's no room for toxicity. I think that really is great rubber also not as harsh as Stack Overflow, which is interesting. But how much do you think that the culture of Python itself matched with the programmer community that you guys are running  like if it was a Java or 'C++', they have slightly different backgrounds. So I think it makes a difference.
It does. Because these are the people that we attract, right? Like the staff members they come from, from a place of understanding that Python has this kind of culture. And I think that we would have attracted a different set of staff members if Python didn't have such an inclusive culture. So by Python establishing, and they've done that all on their own. They've been amazing at building a really strong culture for Python, I think, and inclusivity has been like a really strong fighting point for them. I think. So that means that when we find these advanced Python users who are already renowned in their own way, they they're, you know, like full time Python developers, their speakers at conferences, their library maintainers they're really nice people generally, like most of the people I meet in this community, they're already on board with what we're trying to do. So there's this synergy between the Python culture and our culture that's really played in our favor, I think.
Yeah, I would think so as well. I mean, there's the Brett cannon quote, like I came for the language stayed with the community type of thing. Yeah, exactly. Yeah. What have you done to try to keep that Zen of that community as you've grown to over 100,000 participants.
So the main thing that because now that we're getting so big, we have a big staff and running a big staff of 100 people is work, we have to start treating it almost like a startup. So being a staff member at Python discord is is a job like it's real work. We have meetings, we have several meetings a week, we have meetings with the admins with the leads, we have an all hands meeting, we have project meetings for certain projects that we're pursuing, we have a roadmap that we follow very carefully and plan out with the admins, many of the admins have a domain that they look after. So like this guy is responsible for moderation and one person on maybe events, and that means that there's a bit of ownership and through the entire stuff, we've been like really actively perpetuating this focus on culture, right? And they all really agree with it anyway. So it's not like a hard sell. But by motivating our staff to follow that sort of ethos, it bleeds out to the rest of the community naturally, in everything that we do. They're like, I can't personally follow up all the stuff that we do, but it naturally happens through I guess, a form of leadership. Yeah,
yeah. Fantastic. So three through S is I joined Python discord for question. I'm still here for almost a year later. Don't regret a single day. That's, that's awesome. It's really nice
to hear stuff like this.
Yeah. It sounds like a super cool community. People can go in there and talk about different topics, I imagine. Right? Like, want to talk about 'Flask', there's a 'Flask' last section, you want to talk about getting started? There's probably something for that.
Yeah. So we've organized it so that there's a topical channel for for a bunch of different topics that are basically domains. So we have like an 'Async channel', we have 'web development', where you can ask, sure, Flask, even if you have a 'JavaScript' question, you could you're welcome to ask it there. We've got you know, a place for 'Game Development Frameworks', that kind of stuff. And there are some general channels where you can talk about just about anything. And then beyond that, for people who just are looking for help, we built a system on top of discord that's kind of unique to deliver help channels, almost like a ticketing system, you come in and you claim a channel of your own help channel. And then in that channel, you can ask anything you want. And then you will be assigned sort of as the owner of that channel, and people will come and help you.
Yeah, and you said that with this many people, you have to do like sort of a load balancing type thing to make sure that people can have some help. But that doesn't get overwhelmed and sort of partitioning, you want to talk about that a
little bit. It's been challenging, we used to have just like other generic help, that was a channel.
Now it's just streaming by like tailing a log. Yeah,
suddenly, it was like three channels, because there were so many people at the same time, and you couldn't, nobody could ask anything. And then it grew through, I think eight that it's most and we were just like, we can't keep scaling like this, we we need to figure out a better solution. So we came up with this rotating channel claiming system, it's all run on the thing I mentioned earlier, 'discord.py', we wrote all the code for this, members of the community volunteered, you know, like 10s of 1000s of lines of code in our bot that directly responsible for running the community running all these systems on top of the 'Vanilla' setup that that discord gives us. It's a really powerful thing, you know, when you run a community full of programmers, that uniquely, you can then put them to work doing all this stuff that other types of communities would never be able to do, because they just don't have that amount. Right? So many creative and wonderful people are willing to invest their free time to make something awesome for that. I really am lucky to be surrounded by so many active contributors. I mean, we had dozens of people help build us.
Yeah, I do think that having this programming skill, it's almost like being a magician, right? You can think of this idea. You know, like, you know, I could make that happen. Yeah, I just, I got to think about it a little bit more. And then it'll exist. And there's not many other things like that. No, you're right. So much of the creative stuff. Actually, you've got us, eventually the rubber meets the road, you've got to create a thing, right? Like, if you're a chemist, or you're an engineer, like you can create, you can imagine things but eventually they got to get built. But for programmers, it's just sort of more thinking until it exists. And it's, it's really cool to see like communities putting that to you. So like, Oh, I have this idea. What if the bot could do this? Well, you know, here's the source code, right? It could do that.
Yeah, it's like a superpower. I think one person who knows how to code in a community, it can be like a wizard who, who makes stuff happen. And I have 100 wizards. So like, I can do whatever I want. Pretty much. It's amazing. It really makes the difference. I think that makes that's that little extra cherry on top that makes this community really shine.
Yeah. Well, in the fact that discord has an API and doesn't try to like lock it off and make it impossible to sort of do extra stuff. Right, right.
I mean, it's not by any means trivial, but there are good packages out there that abstracts all the pain away most of the pain anyway.
Yeah, absolutely. Yeah. Super cool. So one of the things You all have been doing as you've been running different kinds of events? Yes. Tell us about some of the events and things you got. You've done and maybe we'll do in the future.
Absolutely. So I think a lot of people come to us with a question or to find some help or some guidance, but then we want them to stay. And one of the ways that we try to do that is to always have something going on. And the events is our way of like having an activity always happening in the community. So we started with, we created a second bot that was just for fun. And then we had like monthly events, like a Valentine's event or Halloween event, where we would invite people to solve these simple problems. So for the Halloween event, we would say, Okay, I want you to write a spooky movie recommender, that's just a fraction, right. And so we provide the bot and the infrastructure for the bot to run on, you just write a command for the bot, it's really just a function that returns a spooky movie, right? That's fairly easy for people to do. And so we get people willing to take on the task, and then we filled up the spot with all of these things. So every month, we would have a theme, and then we would get more people involved in that. But here's the tricky part is we would force them to commit it to GitHub, it would go through reviews, we were kind of harsh review, or sometimes we will give a proper review. But we do it in a very educational way, I think, where we explain very clearly why something needs to change if it needs to change. We have continuous integration systems and continuous deployment setup on all of these things. So that, you know, the code has the length properly has to get through as the match the 'PEP8', basically, and run tests and all this stuff. So it sounds easy. When you start off Yeah, you're just writing a simple function to return a spooky movie. But then actually, we're stealth educating these people on how to work on like, an open source framework, right? Like inside of a context, right? You're
teaching them all the engineering workflow stuff? Uh huh. The soft skills 'Linting' 'CI/CD', get precisely all that kind of.
And I think that that stuff is amazing to know, if you want to go out there and work in the field, you have to know these things. But there aren't that many places online, they will try to teach you those places.
Yeah. But it's also all the difference between Is this a real programmer or someone who just has like, learned a little bit about the language, right? Like, whenever I was doing interviews, you could always sort of tell this person really in the community, do they? Do they kind of know? Yeah, moving part, you know what I mean? Like, because I would interview people, and they would sometimes just make up stuff that they know, I'm like, you don't actually know this to you, I could tell that this is not a thing, right. And I think having those skills depends how you get into programming. But a lot of people come into Python, they don't come through the I went to Carnegie Mellon for four years, they come through the I got inspired, I got a book or I got some kind of thing where I started learning programming, and I've been mostly on my own, but I'm trying to get into the world of programming. And yeah, you know, no one tells you you need to learn about continuous integration.
Right? Exactly. All right, or Unit testing Frameworks, or, or what have you.
Talk Python to me, it's partially supported by our training courses. Have you tried to learn Python but got stuck or lost focus, we know how it feels to try and jam fact after fact, loop construct after turn hair expression into your head. At best, it's boring at worst, it can turn you off programming altogether. That's why we built our course, Python 'Jumpstart by building 10 apps'. This course guides you through carefully planned applications, it starts simple, but progresses to quite real apps. Best of all, you won't be learning dry facts, you'll be learning like the pros do by building real applications and learning in context. If you want to start building with Python, just visit 'talkpython.fm/course' to get started.
Actually, we do the same thing when we interview for for my job, we we often focus on the soft skills we try to like, you know, if we can determine whether someone writes a good commit message that tells you a lot about them, even though it's not strictly you know, the thing that we're actually looking for, we're looking for, like talented programmers. But the two things are slightly linked, in a way often one indicates the other. But yeah, so that was our first sort of our first step into events. And then it grew from there. I had this idea, I started a Code Jam. And I wanted it to be a unique thing. Because again, we're a lot of people do 'Code jams', and they're mostly like game jams.
Give us a quick, what's the elevator pitch? What's a Code Jam.
So Python discord, Code Jam, or just a Code Jam in general, in general, in general, it's you have a week, you have to solve a problem. You don't necessarily know what the problem is, before you start solving it. Maybe you have to solve it within a specific context. So like a framework or a language, something like that,
like use 'React' to build a game up scroller game in a week, something like that. Maybe
it's something like that. And so we wanted to do a spin on this to activate our users to do something fun for a week. But again, I'm trying to like do something that nobody else is doing. So my spin was, you have to do it with a team of strangers, not on your own, not with some people, you know, you have to get out of that safety net out of your comfort zone and solve a problem in a setting that you might see in an open source project or in a job,
right? Because one of the challenges can be there might be these people who've done these before, right? Like these groups of people, we all go to college together, we were roommates. Now we just go do these these events because they're fun, and we still do them together. But if there's like a tight knit group of four people that say, okay, you do the database, I'll do the UI, you get back and go, right, that that's not the same thing. As you know, a couple people, I want to be part of it too. Like we'll find some random folks to meet up, right? You're kind of trying to equalize that a little.
Yeah, they would come in and annihilate everyone. And I want people to be uncomfortable. I want them to do something hard. And to come out of it, having learned how to overcome those challenges, right? Yeah. So that's the pitch is, is that we team you up with some people you've never met, we give you a framework. Let's say you have to write a Django app. And then on the day, you start, we tell you, Oh, and by the way, it has to be automatic of climate change. Or we had one where we said that the theme was this app hates you. And so we asked people to make apps that hate
you some of those
super fun. And my favorite, I remember, there was this one team, they made like a paint clone, similar to MS Paint, but all of the different tools were terrible in their own way. So like you would use the paintbrush, but it would like drip paint on top of the canvas. And the pencil with the tip would break. And then you'd have to constantly be like a walk. Yeah. So each, each tool uniquely terrible, really fun. Now, recently, we had one where the theme was early Internet, and we had a team that created sort of a Windows 98 or Windows 95 clone in Django. And I was like, yeah, this is cool. And it looks fairly, you know, nostalgic, but then the actual thing inside of that Windows clone was that there was a working browser. And when you use the browser, they would intercept the HTML and like modify it to look like early internet. They would pixelate the images or, you know, like add filters and stuff to make it look old and kind of broken. Really, really genuinely interesting. And you could go to any page on the web, to do these amazing things within the limitations we set for them. It's really inspiring to watch some of the stuff we actually we make some videos on our YouTube their highlights videos. Yeah, here's a that's nostalgic, their highlight videos on our YouTube that show off some of the projects that people come up with. We're gonna release another one within a month or two for the one that the the 'CodeJam' that was last summer. So
yeah, that's really cool. Yeah, we should link to those. Yeah, I think back to the early internet, if you had modern tools, and the modern tool chain, you could just blow people's minds. I mean, it was so bad. It was incredibly bad, right? Yes.
Ah, the Amazon ones are the absolute worst. You should all go and like look up what Amazon looked like in its first iteration hilariously bad.
Yeah, it's Oh my gosh. Yeah. So these are some of the types of things you do. Right. These events? Do you have any coming up?
Oh, that's another one we've been. We've invited 'Py week', which is actually a 15 year old Python event, one of the oldest, probably the longest running 'game jam' in the entire ecosystem. We basically offered to take it into our fold and help them advertise it, market it and put it together because they were stretched a little thin. Maybe Daniel Pope who runs it currently, me Lord made he's just become a father, I think busy with things and it changes your perspective on
free time. Yeah, or changes your free time.
He's a wonderful guy I really enjoyed working with him on on the previous 'Py-week', we ran last autumn and now we're we're probably going to help him put one together. He's still running the show. But we help out in every way we can. So there's a 'Py week' coming up. sometime this spring. I don't know if a date has been announced yet. Then we have a 'Code Jam' this summer. And in October, we run the 'Octoberfest' events. December we run 'Advent of code' together with the 'Advent of codestaff'. There's basically something happening every couple months, what do people do to participate?
How do they participate
if you're a member of the community, if you type exclamation mark, subscribe in the bot commands channel, you will be subscribed to announcements, we will basically will ping you every time something big is happening. So so we will always let you know there's also an event page. On our website, you can usually see upcoming major upcoming events on the front page. There's an event sub page there that has everything listed. So it's fairly hard to miss if you're a member of the community. But yeah, the subscribe command for our bot that will make sure that you will definitely be let  know. Yes, how we keep people informed. Yeah,
pretty cool. Sounds like a lot of fun for people to participate in these things. Another thing that you did recently that was noteworthy is you all hosted the core developer 'Sprint's
Yeah, that was interesting. We I mean, we obviously we love the PSF, the Python Software Foundation, and we have a core developer on the staff as well, Kyle Stanley, he's a core developer works on AsyncIO. He's great. He's one of our moderators. And so he got in touch with me and told me that well, because 'PyCon' was cancelled. And usually they have this core
I think a lot of people don't realize that when 'PyCon' fell victim to the pandemic, like everything has, there's so much of that that happens, you don't open source it, you could work for years and never actually face to face have a conversation with someone you're working with. Right. So a lot of those those Sprint's both for core developers in Python, but also for like 'Flask' and 'Django' and other groups would have these get togethers where people could come and contribute and kind of fell by the wayside. Right?
Yeah, I think that was a big, a lot of people took it quite poorly. I mean, that's like the highlight of their year, many of them. If you're a core developer, the PSF will pay a ticket to come and hang out with them and do the course 'Sprint'. And it's like this big event that I would love to do that myself sit down with some of these, like the smartest people, I know. It'd be amazing. I
always consider 'PyCon', my geek holiday. It's like my chance to get away and just enjoy time with my friends who I only see at conferences, go to God have dinner and beer with them afterwards. And yeah, I've never
been because you know, I had to cross the Atlantic to get there. So But hopefully, one
day, yeah, someday soon, hopefully.
Right? So they cancelled that. And so they were looking for an alternative way, because they needed to do the core dev sprint. But obviously, they had to do it remotely. They were looking into how they would host that. And I just suggested to Kyle that. Like, if you guys are interested, Euro Python did it on discord recently. And we could host you, we could set up everything you need all the channels take care of like moderation, if you want to reach out to the community or something, we could put together a call or something like that. And they were interested. And eventually they voted in favor of doing that. So we had all the core developers 40 of them, at least hanging out with us, we left them I mean, they had their own sort of gated off area of the community where they did this. And we've done that for some of the other events like FOSS them, mostly recently, we hosted their organizers and their talk their speakers, so that they have an area to be in without having to go through the hassle of like setting up their own community and managing and administrating all of that. So what's that look
like? In practice, they have their own channel, yeah, then they do like screenshare for the presentation.
Yeah, we just set it up. So that all they got to do is just join. And then right at the top of the list is just all the stuff that's relevant to them, nobody else can see it, just the organizers and the members of that event. So for them, it almost looks like we've just set up a whole server just for them. And then at the bottom, if they want to, they can go and explore our public channels and talk to the community. And some of them did. And there was a lot of really good interaction with with the other members of the community. Yeah, but if they want to, and if they want privacy, which many of them did, they can just stay in their own, like gated off area. And so that's been a one, one way that we've been been able to sort of give back to the ecosystem a little bit and help out. And of course, they also chose to have q&a that they collected questions from the community, and they wanted to do a stream, and we put together the stream on YouTube. for them. It's available both on the PSF on YouTube and on ours, a full length hour long, I think, core developer q&a, from questions from the community really, really interesting. I highly recommend it. That's fantastic. Yeah, it was really fun. We really love the PSF we work with them on other stuff like the they looking for, you know, help get their announcements out there, we have quite a bit of reach by now, in part due to like our announcement channel shirred reaches our 150,000 members. But there's also a feature where you can subscribe to you can put our announcements into your community, and there's 2000 communities right now that sort of relay all of the announcements we made. So then that's just an additional I don't even know how many people and then we've got Twitter, and we've got this and that. So
does that. Does that push notifications out to other discord communities or some other types of communities? Is it like discord to discord? Oh, right.
No, it's it's only Discord. Yeah. So there's 2000 discord communities, probably most of them are small, you know, 10 people who are friends or whatever kind of communities, but there are some that are rather big.
Yeah. It's very cool.
So yeah, it
seems like the community like the core devs and advanced channel. Yeah, very nice. Yeah. Awesome. quite cool. I guess one other thing that we could talk about that you guys are doing is you have some open source stuff, like your bot, for example, is open source and so on. You want to talk a little bit about some of the code.
Yeah, I mean, we have a lot of open source repositories, and we try. So this is about Python. discord has to be a great place for beginners to discover programming and to get help and so on. But it also needs to be a place that's engaging for more advanced users. And one of the ways that we're doing that is to try to provide learning opportunities even for people who have years of experience with Python. And one of the ways that you can improve your hone your skills And get better is to work on exciting projects that help the community. So we've open sourced everything. We're very transparent about how everything works. And there's a whole bunch of projects from the bots there. Three, four bots by now I think now three, we've got the website, of course, and some micro services that interact with the website. 'Snack box' is an interesting one. That's a completely sandboxed Python evaluation tool, right? Yeah. So that we can have a command on the server where people can run actual raw Python code without them being able to like destroy all our servers, because there's of course, a risk associated with people running arbitrary code.
Yeah, that's the danger of, hey, you want to test this code out? Click here? Oh, wait, the code I'm trying to test is, you know, sub process launch such and such.
Yeah, or whatever. Yeah, so we have like several layers of sandboxing. Like, if it takes too long, or if it uses specific parts of the standard library that might be used in a malicious way, then it just doesn't do it at all. But even if it does do it, it's inside of one sandbox that's inside another sandbox. And it's very, very safe. And this is open source, you can take this tool, snack box, and you can use it in your bot or in your website or whatever service you want, if you want to be able to like safely evaluate the Python code. So what are some examples like how this gets used in in discord, this check box, we actually only use it for the bots so that people can evaluate code. But that function is very valuable because it helps sessions sometimes are helpers are people who are trying to explain something, they want to execute some code and show what the result is to sort of explain a concept. So someone's stuck on like, how does this work that will then they can just show them with a code example and evaluates it right there. It's a very nice teaching aid, essentially.
Yeah, that's quite cool. Nice. Any other projects you want to highlight?
Yeah, for sure, we try to do projects that aren't strictly just code as well. For instance, in our staff, we have some people who are involved in the DevOps side of Python discord, we have a very modern DevOps architecture using Kubernetes cluster, everything has its own containerized service. And some of us are like really learning how to do advanced, I think industry standard DevOps by by doing it here at Python, discord, we have media projects, and branding projects with people who have graphic design skills, they come in and help us they like say, say we have a Halloween event, oh, you can come in and make like a spooky banner or something that we might put somewhere, right? Try to get people involved like that. And now we're making a lot of YouTube content, like the PEP8 song. That means we need editors, we need people who are good at animation, maybe people who can do sound music, all of these kinds of skill sets, we try to provide an avenue for them to involve themselves. And if you've got a unique skill set that I didn't mention, or I couldn't even think of, then, you know, if you come and advertise to us, maybe we'll be able to find some creative way where we can put that to use
Yeah, oh, that's really interesting way to leverage the community, not just the core programming skills, but the other stuff as well.
Yeah. And I think it's really essential that we have this kind of approach, because I think the thing that's difficult about running a community of volunteers is that if you run a business, well, I can like buy productivity, I pay you, you make me something, right. But when I have a community of volunteers, I can't pay you, I don't have any money to pay you with. So the only way I can get you to do something is to motivate you. And there's some intrinsic motivation in being part of something good and wholesome, like this, I think the culture helps bring people in and like from from an altruistic point of view, like they just want to help out, they want to be a good force in the universe. But ultimately, if you really want strong, directed initiative, and motivation, I think you have to find like a synergy sort of thing where your personal goals aligned with the goals of the community, right. So you want to do something for us, that's good for you. But it's also good for us. That's the perfect way to motivate people. So by providing as many ways as possible for people to get involved like that, it means that people can come in and actually like build their skill set. Maybe they make something impressive, and they can put it on their resume, they can go out and get a job. And we're very good at like trying to give people credit and help people out. I've personally been like a job reference for many of the staff members, I've written letters of recommendation, you know, stuff like that, because we really want people to come in. And if they invest themselves into our community and invest hours of work, I want them to get something out of it like personally, because that's the best way that I can motivate them to keep working.
Yeah. Does it cost money? Is it expensive to run the community like servers and bandwidth and all that
we've been lucky enough to be sponsored by everyone. We need it to be sponsored by so we have 'Linode' as a sponsor, and we've got 'Notion' providing free documentation stuff for us. So with a bunch of different partners we've worked with and sponsored for prizes for the events like 'Adafruit' we've worked with 'DigitalOcean'  'JetBrains'  have been giving us licenses we can give away for a long time, 'Sentry' and other sponsors that give us 'Sentry' monitoring. So that covers our like essentials. We don't pay for hosting, because 'Linode' is providing all the hosting for free. But we do have some expenses associated with the events, t shirts that sent out as prizes, this sort of thing. And that some of that comes in via our Patreon, for we made a really, I'm really happy with this animated explainer video that we send to everyone who joins the community called Welcome to Python discord in that one, we went out and found some voice talent to do a voiceover for us so that we could get like that curse gesac style voiceover I specifically asked the guy can you do a curse cosec voice and he was like, Yeah, I
can do that.
So happy with the results. But that's an example of where we might have put in a little bit of money. Not that it was super expensive. He was very generous, right?
Yeah, that's cool. But it's not like super expensive, say like, 'PyPI' is really expensive to run if it weren't for the sponsors and the donations, right, like $40,000 a month with bandwidth and stuff like that.
Yeah, no, because like the majority of that bandwidth is I guess, discord is paying that right? And we're not paying you know, like, it's free to run a community on discord no matter how big it gets. Yeah, that's cool. So essentially, no, it's it's fairly cheap to make ends meet here. And we try to put all the money that we get in straight back out to the community as prizes, or and giveaway. So whatever we can just, we're not trying to like make money. We're just trying to provide the best possible experience that we can for our users.
Yeah, super cool. One thing that we talked about a little bit before we hit record, I think is interesting is you'd mentioned how some of the infrastructure and some of the ideas you get to apply and experiment with here are things that you can actually bring back to your day job, where you wouldn't get a chance to say, oh, let's you know, try this thing with Kubernetes, or whatever it is you're doing, but you can try it here. And then if it works, like oh, yeah, we tried this. Here's how it's working. I think there's this interesting interplay between like work, work, your main professional experience, and then these kind of more freeform places where you have more control to do whatever you want. Yeah, we
try to encourage that kind of thing. Like we were now we're thinking about doing a rewrite or for our API into 'Fast API'. It's currently a 'Django RESTful API'. And the primary motivation for that is because one of the owners needs to learn 'FastAPI' for work. Yeah, sure. That's a really good reason to do it. And of course, it gives us an extra benefit, because it could use a rewrite. But it probably we wouldn't have done it unless we had someone who was sort of personally motivated. So yeah, in a way, I think, especially at the top of like the executive leadership, we try to use Python discord as sort of a sandbox to experiment with stuff and learn skills that we can take with us to work.
Yeah, it gives a lot of people experience with things that they otherwise might not get to touch. Because that API that they work on at work, it's been 'Django REST' framework for five years, and then a reason to change it. And they're not changing it because it works. Don't touch it.
Yeah, exactly. I learned Kubernetes from Python discord myself, but now I'm bringing it to work with me, because we don't have that kind of sophistication there quite yet. And that's just one example. I've learned half of everything I know, I think it path and descript because of Of course, I'm in a unique position of being able to do pretty much whatever I want there.
Yeah. Like, that's the secret to being on the cutting edge is you find these places where you can try things out. And then you have that experience, maybe to bring back to more conservative type of environments.
I think that this kind of way of using the community has been mostly available to the owners until we grew to the size. And now I'm trying to sort of expand that to the rest of the staff and anyone who wants to get involved. Like, please come and use us  as a way for you to learn that next thing that you're thinking about learning like we maybe we can provide you an opportunity to and really looking to get into making a great sounding audio. Maybe we have an opportunity for you to like hone your craft and practice.
Yeah, yeah. Very cool. All right. Well, I think that's about it for time that we have to talk about Python discord, but congratulations on such a cool community. You and everyone else I know isn't just you. You're the figurehead for the community, right?
Maybe in a way because I have a freakishly large beard. And there's a small cult of personality around my lemon nickname we have we have a whole set of emojis with lemons are nice. Sort of, but yeah, I don't know. We have a lot of really notable members of the community once you get to know them. It's so many great people involved. So it's just a wonderful place to be.
Yeah. Fantastic. All right, final two questions. Before I let you out of here. Yes, you're gonna write some Python code what editor are using these days, so
I use 'PyCharm'. And I use a little bit of VS code on the side when I need to do something really simple or whenever I want to do this code
it's 100%. agree with you? Absolutely. Yeah. Very, very cool one. All right. And then notable 'PyPI' packages, what do you want to give a shout out to there,
we've mentioned a couple of, of the the stuff that we've made here at Python discord, I want to also mention that. So maybe that's a little narcissistic of me to talk about my own packages, when you asked me this, there's a lot of packages, I really love out there. But you may not have heard of stuff like we have 'Async' 'Redis Cache', which is this, we found out that working with Redis, from an 'Asynchronous' context can be a little complicated sometimes. So we made this 'PyPI' package that makes it extremely trivial to work with Redis from, for instance, a discord bot, that's where we use it. So that if all you need to do is just cache some data in Redis, so that you can access it later. And you know, like use it as a cache that way most people do have this is a god send for for working with it in an asynchronous way. Then I also have a personal project that I've been working on a lot lately called 'Black box'. And it's in reference to the black box inside of a plane. Okay, so like, the idea is, if there's a disaster, you get the black box and has the stuff that you need to like, figure out what happened and get back on track. And so black box is a backup system. It's designed to be extremely easy to work with, like abstracts away all the painful stuff. And it's also designed to be really easy to contribute to, I've been like working on trying to make the most contributor friendly thing I can do big fat README. Everything's like abstract classes. So if you want to contribute, you usually only have to touch a single file to write like a single interface, basically, for the thing. So what it does is you make a 'Config file', you put 'Connection strings' into that 'Config file'. So say you want to do a backup of 'Postgres', while you write a single string that's like
I love it. That's really cool. And looks like something maybe I could even make use of I mean, I got MongoDB and I have backups for it. But this sort of fully automatic stuff. That'd be cool. I've already got a Slack channel where I get notifications for like deploys, and yeah, whatnot, it could just throw in like, Hey, we did a backup next to that, you know,
well, it's it's really easy to get started with. So if it you know, like some people have like a, like expensive paid backup services. And they'll obviously be much better like saving a complete snapshot of the entire database server is going to be better than this. But if you're just looking for something quick and easy, maybe you just want to store it in on Dropbox or something. This is a great way to have like off site backups for free. And you can set it up in 10 minutes. Very cool. All right. Well, that's
that's quite neat now, thanks for letting us know about that one.
Yeah,
yeah. All right. Well, the the live chat is blowing up with lemons and bot commands about your beard and things like that. So thanks, everyone, but mostly just appreciation from the community, I think so very cool. To find a call to action, people are interested in being part of your community, what do they do
write so they can go to "pythondiscord.com" or 'org'. And from there, you get all the information you need in order to join us. If there's also just 'discord.gg/python', that's us. Or you can even find it in the Python subreddit. So once you get into the community, you just ask around and who will help you get started with whatever it is you want. You need help. There's help channels to ask and you join an event. There's lots of cool stuff going to happen in the next couple months. Get involved in PY week. It's really fun. You write a game, I get involved in the Code Jam. It's a unique experience. Yeah. And yeah, just come hang out with us. It's really it's a lovely place.
That's cool. It sounds like some of these programming examples and opportunities might be like, more low key more silly and fun, rather than, you know, forms over data.
Yeah, yeah, exactly.
Yeah. All right. Well, thanks for coming on and sharing what you guys are up to over there and be great chat with you. Oh, it's been my pleasure. Yep. See you later. All right. Bye, Mike. This has been another episode of talk Python to me. Our guest on this episode was Leon santoy. It's been brought to you by Linode and Us over at talk Python training, simplify your infrastructure and cut your club bills in half with 'Linode'. Linux virtual machines develop, deploy and scale your modern applications faster and easier. Visit 'talk python.fm/linode' and click the Create free account button to get started. Level up your Python we have one of the largest catalogs of Python video courses over at talk Python. Our content ranges from true beginners to deeply advanced topics like 'Memory' and 'Async'. And best of all, there's not a subscription in sight. Check it out for yourself at "training.talk python.fm" Be sure to subscribe to the show, open your favorite podcast app and search for Python. We should be right at the top. You can also find the iTunes feed at '/iTunes', the Google Play feed at
